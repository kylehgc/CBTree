{"version":3,"file":"static/js/764.5f80456f.chunk.js","mappings":"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","sources":["../node_modules/@chakra-ui/textarea/dist/chakra-ui-textarea.esm.js","Components/TextFieldQuestion.tsx","Hooks/UseThoughtRecord.tsx","Hooks/useThoughtRecordApi.tsx","../node_modules/@chakra-ui/form-control/dist/chakra-ui-form-control.esm.js"],"sourcesContent":["import { useFormControl } from '@chakra-ui/form-control';\nimport { forwardRef, useStyleConfig, omitThemingProps, chakra } from '@chakra-ui/system';\nimport { omit, cx, __DEV__ } from '@chakra-ui/utils';\nimport * as React from 'react';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar _excluded = [\"className\", \"rows\"];\n\n/**\n * Textarea is used to enter an amount of text that's longer than a single line\n * @see Docs https://chakra-ui.com/textarea\n */\nvar Textarea = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useStyleConfig(\"Textarea\", props);\n\n  var _omitThemingProps = omitThemingProps(props),\n      className = _omitThemingProps.className,\n      rows = _omitThemingProps.rows,\n      rest = _objectWithoutPropertiesLoose(_omitThemingProps, _excluded);\n\n  var textareaProps = useFormControl(rest);\n  var omitted = [\"h\", \"minH\", \"height\", \"minHeight\"];\n  var textareaStyles = rows ? omit(styles, omitted) : styles;\n  return /*#__PURE__*/React.createElement(chakra.textarea, _extends({\n    ref: ref,\n    rows: rows\n  }, textareaProps, {\n    className: cx(\"chakra-textarea\", className),\n    __css: textareaStyles\n  }));\n});\n\nif (__DEV__) {\n  Textarea.displayName = \"Textarea\";\n}\n\nexport { Textarea };\n","import useThoughtRecord from '../Hooks/UseThoughtRecord'\n\nimport { Textarea, Button, VStack, SlideFade } from '@chakra-ui/react'\n\nimport { useEffect, useState } from 'react'\nimport UseThemeColors from '../Hooks/useThemeColors'\nimport { isKeyOfThoughtRecord } from './types'\nimport LoadingTextField from './LoadingTextField'\n\nconst TextFieldQuestion: React.FC = () => {\n\tconst { foregroundColor } = UseThemeColors()\n\tconst [fieldState, setFieldState] = useState<string>('')\n\tconst {\n\t\tlabel,\n\t\tonSubmit,\n\t\tisSubmitting,\n\t\tthoughtRecord,\n\t\tcurrentQuestion,\n\t\tisValidQuestion,\n\t} = useThoughtRecord()\n\n\tuseEffect(() => {\n\t\tif (thoughtRecord) {\n\t\t\tif (isKeyOfThoughtRecord(currentQuestion, thoughtRecord) && !fieldState) {\n\t\t\t\tconst value = thoughtRecord[currentQuestion]\n\t\t\t\tif (typeof value === 'string') {\n\t\t\t\t\tsetFieldState(value)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [currentQuestion, thoughtRecord, fieldState])\n\n\tconst onChange: React.ChangeEventHandler<HTMLTextAreaElement> = (event) => {\n\t\tsetFieldState(event.target.value)\n\t}\n\tif (!thoughtRecord || !isValidQuestion) {\n\t\treturn <LoadingTextField />\n\t}\n\treturn (\n\t\t<VStack\n\t\t\tspacing={0}\n\t\t\trounded={'3xl'}\n\t\t\tw={'full'}\n\t\t\tminH={'100%'}\n\t\t\tflexDirection=\"column\"\n\t\t\tmt={6}\n\t\t\talignContent=\"center\"\n\t\t\tjustifyContent=\"center\"\n\t\t\tmx={2}\n\t\t\tpx={5}\n\t\t\tpy={0}\n\t\t>\n\t\t\t<SlideFade\n\t\t\t\toffsetY={0}\n\t\t\t\toffsetX={'50%'}\n\t\t\t\ttransition={{\n\t\t\t\t\tenter: { duration: 0.2 },\n\t\t\t\t\texit: { delay: 0.7, duration: 0.3 },\n\t\t\t\t}}\n\t\t\t\tstyle={{\n\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\tflexDirection: 'column',\n\t\t\t\t\theight: '90%',\n\t\t\t\t\twidth: '100%',\n\t\t\t\t}}\n\t\t\t\tin={!isSubmitting}\n\t\t\t>\n\t\t\t\t<Textarea\n\t\t\t\t\tplaceholder={label}\n\t\t\t\t\tonChange={onChange}\n\t\t\t\t\tvalue={fieldState}\n\t\t\t\t\tcolor={'black'}\n\t\t\t\t\t_placeholder={{ color: 'blackAlpha.800', fontSize: '3xl' }}\n\t\t\t\t\tp={4}\n\t\t\t\t\tbg={foregroundColor}\n\t\t\t\t\th={'90%'}\n\t\t\t\t\tw={'full'}\n\t\t\t\t\trounded={'xl'}\n\t\t\t\t\tsize=\"lg\"\n\t\t\t\t/>\n\t\t\t</SlideFade>\n\t\t\t<SlideFade\n\t\t\t\tin={!isSubmitting}\n\t\t\t\toffsetY={0}\n\t\t\t\ttransition={{\n\t\t\t\t\tenter: { delay: 0.2, duration: 0.4 },\n\t\t\t\t\texit: { delay: 0.3, duration: 0.3 },\n\t\t\t\t}}\n\t\t\t\toffsetX={'100px'}\n\t\t\t\tstyle={{\n\t\t\t\t\tflexDirection: 'column',\n\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\theight: '10%',\n\t\t\t\t\twidth: '100%',\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Button\n\t\t\t\t\tdisabled={fieldState.length < 1}\n\t\t\t\t\tvariant={'submit'}\n\t\t\t\t\talignSelf={'center'}\n\t\t\t\t\tisLoading={isSubmitting}\n\t\t\t\t\tbackground={foregroundColor}\n\t\t\t\t\tloadingText={'Submitting'}\n\t\t\t\t\tonClick={() => onSubmit(fieldState)}\n\t\t\t\t>\n\t\t\t\t\tSubmit\n\t\t\t\t</Button>\n\t\t\t</SlideFade>\n\t\t</VStack>\n\t)\n}\n\nexport default TextFieldQuestion\n","import { useToast } from '@chakra-ui/react'\nimport { useEffect, useState } from 'react'\nimport { useLocation, useNavigate } from 'react-router-dom'\nimport {\n\tThoughtRecord,\n\tisThoughtRecord,\n\tisKeyOfThoughtRecord,\n\tQuestionType,\n\tquestion,\n\tthoughtRecordData,\n\tisQuestion,\n\tFormValues,\n} from '../Components/types'\nimport { getToken } from '../utils/api'\nimport { useThoughtRecordApi } from './useThoughtRecordApi'\n\ninterface UseThoughtRecordReturn {\n\tlabel: string\n\tonSubmit: (data: FormValues) => void\n\tisSubmitting: boolean\n\tcurrentQuestion: string\n\tisValidQuestion: boolean | null\n\tthoughtRecord: ThoughtRecord | undefined\n}\n\nconst getLastValid = (pathname: QuestionType, thoughtRecord: ThoughtRecord) => {\n\tfor (let path of question) {\n\t\tlet thoughtRecordKey = path.slice(1)\n\t\tif (path === pathname) {\n\t\t\treturn path\n\t\t}\n\t\tif (isKeyOfThoughtRecord(thoughtRecordKey, thoughtRecord)) {\n\t\t\tif (thoughtRecord[thoughtRecordKey] === null) {\n\t\t\t\treturn path\n\t\t\t}\n\t\t}\n\t}\n\treturn pathname\n}\nconst UseThoughtRecord = (): UseThoughtRecordReturn | never => {\n\tconst toast = useToast()\n\tconst navigate = useNavigate()\n\tconst { pathname, state } = useLocation()\n\tconst [thoughtRecord, setThoughtRecord] = useState<ThoughtRecord>()\n\tconst [isValidQuestion, setIsValidQuestion] = useState<boolean | null>(null)\n\tconst {\n\t\tupdateThoughtRecord,\n\t\tgetActiveThoughtRecord,\n\t\tisSubmitting,\n\t\tsaveThoughtRecord,\n\t} = useThoughtRecordApi()\n\n\tconst token = getToken()\n\tif (!token) {\n\t\tthrow Error\n\t}\n\tuseEffect(() => {\n\t\tif (!isValidQuestion && isQuestion(pathname)) {\n\t\t\tif (thoughtRecord) {\n\t\t\t\tconst lastValid = getLastValid(pathname, thoughtRecord)\n\t\t\t\tif (lastValid !== pathname) {\n\t\t\t\t\tnavigate(lastValid)\n\t\t\t\t} else {\n\t\t\t\t\tsetIsValidQuestion(true)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}, [isValidQuestion, navigate, pathname, thoughtRecord])\n\n\tuseEffect(() => {\n\t\tconst getThoughtRecord = async () => {\n\t\t\tif (!thoughtRecord) {\n\t\t\t\tif (isThoughtRecord(state)) {\n\t\t\t\t\tsetThoughtRecord(state)\n\t\t\t\t} else {\n\t\t\t\t\tsetThoughtRecord(await getActiveThoughtRecord(token))\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!isSubmitting) {\n\t\t\tgetThoughtRecord()\n\t\t}\n\t}, [getActiveThoughtRecord, isSubmitting, state, thoughtRecord, token])\n\n\tconst onSubmit = async (data: FormValues) => {\n\t\tif (isQuestion(pathname)) {\n\t\t\tif (pathname === '/submit') {\n\t\t\t\ttry {\n\t\t\t\t\tawait saveThoughtRecord()\n\t\t\t\t\tnavigate('/')\n\t\t\t\t} catch (error) {\n\t\t\t\t\tif (error instanceof Error) {\n\t\t\t\t\t\ttoast({\n\t\t\t\t\t\t\tstatus: 'error',\n\t\t\t\t\t\t\tdescription: 'problem submitting',\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst updateKey = pathname.slice(1)\n\t\t\t\tconst activeThoughtRecord: string = isThoughtRecord(thoughtRecord)\n\t\t\t\t\t? thoughtRecord.key\n\t\t\t\t\t: ''\n\t\t\t\tconst NextLinkIndex = question.indexOf(pathname) + 1\n\t\t\t\ttry {\n\t\t\t\t\tconst updatedRecord = await updateThoughtRecord(\n\t\t\t\t\t\tdata,\n\t\t\t\t\t\tactiveThoughtRecord,\n\t\t\t\t\t\tupdateKey,\n\t\t\t\t\t)\n\t\t\t\t\tnavigate(question[NextLinkIndex], { state: { ...updatedRecord } })\n\t\t\t\t} catch {\n\t\t\t\t\ttoast({\n\t\t\t\t\t\tstatus: 'error',\n\t\t\t\t\t\tdescription: 'problem with update',\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tlet label: string = ''\n\tlet currentQuestion: string = ''\n\tif (isQuestion(pathname)) {\n\t\tlabel = thoughtRecordData[pathname].label\n\t\tcurrentQuestion = pathname.slice(1)\n\t}\n\treturn {\n\t\tlabel: label,\n\t\tonSubmit: onSubmit,\n\t\tisSubmitting: isSubmitting,\n\t\tcurrentQuestion: currentQuestion,\n\t\tthoughtRecord: thoughtRecord,\n\t\tisValidQuestion: isValidQuestion,\n\t}\n}\nexport default UseThoughtRecord\n","import { useState } from 'react'\nimport {\n\tthoughtRecordEndPoint,\n\tgetAuthHeader,\n\tuserEndPoint,\n} from '../utils/api'\nimport useAuth from './useAuth'\nimport {\n\tFormValues,\n\tThoughtRecord,\n\tisThoughtRecord,\n\tToken,\n} from '../Components/types'\n/* returns a function that takes in the current path and active thought record \nto update and a piece of state that shows if the data is currently being fetched */\n\nexport const useThoughtRecordApi = () => {\n\tconst { logout } = useAuth()\n\tconst authHeader = getAuthHeader()\n\tconst [isSubmitting, setIsSubmitting] = useState(false)\n\n\tconst handleFetch = async (endPoint: string, fetchOptions: RequestInit) => {\n\t\tif (isSubmitting) {\n\t\t\treturn\n\t\t}\n\t\tawait setIsSubmitting(true)\n\t\tconst response = await fetch(endPoint, fetchOptions)\n\t\tif (response.ok) {\n\t\t\tconst data = await response.json()\n\t\t\tsetIsSubmitting(false)\n\t\t\treturn data\n\t\t}\n\t\tif (response.status === 401 || 403) {\n\t\t\tlogout()\n\t\t} else throw Error(response.statusText)\n\t}\n\n\tconst getActiveThoughtRecord = async (\n\t\ttoken: Token,\n\t): Promise<ThoughtRecord> => {\n\t\tconst data = await handleFetch(thoughtRecordEndPoint, authHeader)\n\t\tif (isThoughtRecord(data)) {\n\t\t\treturn data\n\t\t}\n\t\tthrow Error('not a thought record')\n\t}\n\tconst getNewThoughtRecord = async (): Promise<ThoughtRecord> => {\n\t\tconst options = { method: 'POST', ...authHeader }\n\t\tconst thoughtRecord = await handleFetch(thoughtRecordEndPoint, options)\n\n\t\tif (isThoughtRecord(thoughtRecord)) {\n\t\t\treturn thoughtRecord\n\t\t} else {\n\t\t\tthrow Error('response isnt valid')\n\t\t}\n\t}\n\n\tconst saveThoughtRecord = async () => {\n\t\tconst saveOptions: RequestInit = {\n\t\t\theaders: {\n\t\t\t\t...getAuthHeader().headers,\n\t\t\t\tAccept: 'application/json',\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tmethod: 'POST',\n\t\t}\n\n\t\treturn await handleFetch(`${userEndPoint}/thoughtrecord`, saveOptions)\n\t}\n\n\tconst updateThoughtRecord = async (\n\t\tdata: FormValues,\n\t\tactiveThoughtRecord: string,\n\t\tupdateKey: string,\n\t) => {\n\t\tconst updateOptions: RequestInit = {\n\t\t\theaders: {\n\t\t\t\tAccept: 'application/json',\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t...authHeader.headers,\n\t\t\t},\n\t\t\tmethod: 'PATCH',\n\t\t}\n\t\tupdateOptions.body = JSON.stringify({ [updateKey]: data })\n\t\treturn await handleFetch(\n\t\t\t`${thoughtRecordEndPoint}/${activeThoughtRecord}`,\n\t\t\tupdateOptions,\n\t\t)\n\t}\n\treturn {\n\t\tupdateThoughtRecord,\n\t\tgetActiveThoughtRecord,\n\t\tgetNewThoughtRecord,\n\t\tisSubmitting,\n\t\tsaveThoughtRecord,\n\t}\n}\n","import { useId, useBoolean } from '@chakra-ui/hooks';\nimport { forwardRef, useMultiStyleConfig, omitThemingProps, StylesProvider, chakra, useStyles, useStyleConfig } from '@chakra-ui/system';\nimport { cx, __DEV__, dataAttr, callAllHandlers, ariaAttr } from '@chakra-ui/utils';\nimport { createContext, mergeRefs } from '@chakra-ui/react-utils';\nimport * as React from 'react';\nimport Icon from '@chakra-ui/icon';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar _excluded$2 = [\"id\", \"isRequired\", \"isInvalid\", \"isDisabled\", \"isReadOnly\"],\n    _excluded2$1 = [\"getRootProps\", \"htmlProps\"];\n\nvar _createContext = createContext({\n  strict: false,\n  name: \"FormControlContext\"\n}),\n    FormControlProvider = _createContext[0],\n    useFormControlContext = _createContext[1];\n\nfunction useFormControlProvider(props) {\n  var idProp = props.id,\n      isRequired = props.isRequired,\n      isInvalid = props.isInvalid,\n      isDisabled = props.isDisabled,\n      isReadOnly = props.isReadOnly,\n      htmlProps = _objectWithoutPropertiesLoose(props, _excluded$2); // Generate all the required ids\n\n\n  var uuid = useId();\n  var id = idProp || \"field-\" + uuid;\n  var labelId = id + \"-label\";\n  var feedbackId = id + \"-feedback\";\n  var helpTextId = id + \"-helptext\";\n  /**\n   * Track whether the `FormErrorMessage` has been rendered.\n   * We use this to append its id the `aria-describedby` of the `input`.\n   */\n\n  var _React$useState = React.useState(false),\n      hasFeedbackText = _React$useState[0],\n      setHasFeedbackText = _React$useState[1];\n  /**\n   * Track whether the `FormHelperText` has been rendered.\n   * We use this to append its id the `aria-describedby` of the `input`.\n   */\n\n\n  var _React$useState2 = React.useState(false),\n      hasHelpText = _React$useState2[0],\n      setHasHelpText = _React$useState2[1]; // Track whether the form element (e.g, `input`) has focus.\n\n\n  var _useBoolean = useBoolean(),\n      isFocused = _useBoolean[0],\n      setFocus = _useBoolean[1];\n\n  var getHelpTextProps = React.useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    return _extends({\n      id: helpTextId\n    }, props, {\n      /**\n       * Notify the field context when the help text is rendered on screen,\n       * so we can apply the correct `aria-describedby` to the field (e.g. input, textarea).\n       */\n      ref: mergeRefs(forwardedRef, function (node) {\n        if (!node) return;\n        setHasHelpText(true);\n      })\n    });\n  }, [helpTextId]);\n  var getLabelProps = React.useCallback(function (props, forwardedRef) {\n    var _props$id, _props$htmlFor;\n\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    return _extends({}, props, {\n      ref: forwardedRef,\n      \"data-focus\": dataAttr(isFocused),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(isInvalid),\n      \"data-readonly\": dataAttr(isReadOnly),\n      id: (_props$id = props.id) != null ? _props$id : labelId,\n      htmlFor: (_props$htmlFor = props.htmlFor) != null ? _props$htmlFor : id\n    });\n  }, [id, isDisabled, isFocused, isInvalid, isReadOnly, labelId]);\n  var getErrorMessageProps = React.useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    return _extends({\n      id: feedbackId\n    }, props, {\n      /**\n       * Notify the field context when the error message is rendered on screen,\n       * so we can apply the correct `aria-describedby` to the field (e.g. input, textarea).\n       */\n      ref: mergeRefs(forwardedRef, function (node) {\n        if (!node) return;\n        setHasFeedbackText(true);\n      }),\n      \"aria-live\": \"polite\"\n    });\n  }, [feedbackId]);\n  var getRootProps = React.useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    return _extends({}, props, htmlProps, {\n      ref: forwardedRef,\n      role: \"group\"\n    });\n  }, [htmlProps]);\n  var getRequiredIndicatorProps = React.useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    return _extends({}, props, {\n      ref: forwardedRef,\n      role: \"presentation\",\n      \"aria-hidden\": true,\n      children: props.children || \"*\"\n    });\n  }, []);\n  return {\n    isRequired: !!isRequired,\n    isInvalid: !!isInvalid,\n    isReadOnly: !!isReadOnly,\n    isDisabled: !!isDisabled,\n    isFocused: !!isFocused,\n    onFocus: setFocus.on,\n    onBlur: setFocus.off,\n    hasFeedbackText: hasFeedbackText,\n    setHasFeedbackText: setHasFeedbackText,\n    hasHelpText: hasHelpText,\n    setHasHelpText: setHasHelpText,\n    id: id,\n    labelId: labelId,\n    feedbackId: feedbackId,\n    helpTextId: helpTextId,\n    htmlProps: htmlProps,\n    getHelpTextProps: getHelpTextProps,\n    getErrorMessageProps: getErrorMessageProps,\n    getRootProps: getRootProps,\n    getLabelProps: getLabelProps,\n    getRequiredIndicatorProps: getRequiredIndicatorProps\n  };\n}\n\n/**\n * FormControl provides context such as\n * `isInvalid`, `isDisabled`, and `isRequired` to form elements.\n *\n * This is commonly used in form elements such as `input`,\n * `select`, `textarea`, etc.\n */\nvar FormControl = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useMultiStyleConfig(\"Form\", props);\n  var ownProps = omitThemingProps(props);\n\n  var _useFormControlProvid = useFormControlProvider(ownProps),\n      getRootProps = _useFormControlProvid.getRootProps;\n      _useFormControlProvid.htmlProps;\n      var context = _objectWithoutPropertiesLoose(_useFormControlProvid, _excluded2$1);\n\n  var className = cx(\"chakra-form-control\", props.className);\n  return /*#__PURE__*/React.createElement(FormControlProvider, {\n    value: context\n  }, /*#__PURE__*/React.createElement(StylesProvider, {\n    value: styles\n  }, /*#__PURE__*/React.createElement(chakra.div, _extends({}, getRootProps({}, ref), {\n    className: className,\n    __css: styles[\"container\"]\n  }))));\n});\n\nif (__DEV__) {\n  FormControl.displayName = \"FormControl\";\n}\n\n/**\n * FormHelperText\n *\n * Assistive component that conveys additional guidance\n * about the field, such as how it will be used and what\n * types in values should be provided.\n */\nvar FormHelperText = /*#__PURE__*/forwardRef(function (props, ref) {\n  var field = useFormControlContext();\n  var styles = useStyles();\n  var className = cx(\"chakra-form__helper-text\", props.className);\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({}, field == null ? void 0 : field.getHelpTextProps(props, ref), {\n    __css: styles.helperText,\n    className: className\n  }));\n});\n\nif (__DEV__) {\n  FormHelperText.displayName = \"FormHelperText\";\n}\n\nvar _excluded$1 = [\"isDisabled\", \"isInvalid\", \"isReadOnly\", \"isRequired\"],\n    _excluded2 = [\"id\", \"disabled\", \"readOnly\", \"required\", \"isRequired\", \"isInvalid\", \"isReadOnly\", \"isDisabled\", \"onFocus\", \"onBlur\"];\n\n/**\n * React hook that provides the props that should be spread on to\n * input fields (`input`, `select`, `textarea`, etc.).\n *\n * It provides a convenient way to control a form fields, validation\n * and helper text.\n *\n * @internal\n */\nfunction useFormControl(props) {\n  var _useFormControlProps = useFormControlProps(props),\n      isDisabled = _useFormControlProps.isDisabled,\n      isInvalid = _useFormControlProps.isInvalid,\n      isReadOnly = _useFormControlProps.isReadOnly,\n      isRequired = _useFormControlProps.isRequired,\n      rest = _objectWithoutPropertiesLoose(_useFormControlProps, _excluded$1);\n\n  return _extends({}, rest, {\n    disabled: isDisabled,\n    readOnly: isReadOnly,\n    required: isRequired,\n    \"aria-invalid\": ariaAttr(isInvalid),\n    \"aria-required\": ariaAttr(isRequired),\n    \"aria-readonly\": ariaAttr(isReadOnly)\n  });\n}\n/**\n * @internal\n */\n\nfunction useFormControlProps(props) {\n  var _ref, _ref2, _ref3;\n\n  var field = useFormControlContext();\n\n  var id = props.id,\n      disabled = props.disabled,\n      readOnly = props.readOnly,\n      required = props.required,\n      isRequired = props.isRequired,\n      isInvalid = props.isInvalid,\n      isReadOnly = props.isReadOnly,\n      isDisabled = props.isDisabled,\n      onFocus = props.onFocus,\n      onBlur = props.onBlur,\n      rest = _objectWithoutPropertiesLoose(props, _excluded2);\n\n  var labelIds = props[\"aria-describedby\"] ? [props[\"aria-describedby\"]] : []; // Error message must be described first in all scenarios.\n\n  if (field != null && field.hasFeedbackText && field != null && field.isInvalid) {\n    labelIds.push(field.feedbackId);\n  }\n\n  if (field != null && field.hasHelpText) {\n    labelIds.push(field.helpTextId);\n  }\n\n  return _extends({}, rest, {\n    \"aria-describedby\": labelIds.join(\" \") || undefined,\n    id: id != null ? id : field == null ? void 0 : field.id,\n    isDisabled: (_ref = disabled != null ? disabled : isDisabled) != null ? _ref : field == null ? void 0 : field.isDisabled,\n    isReadOnly: (_ref2 = readOnly != null ? readOnly : isReadOnly) != null ? _ref2 : field == null ? void 0 : field.isReadOnly,\n    isRequired: (_ref3 = required != null ? required : isRequired) != null ? _ref3 : field == null ? void 0 : field.isRequired,\n    isInvalid: isInvalid != null ? isInvalid : field == null ? void 0 : field.isInvalid,\n    onFocus: callAllHandlers(field == null ? void 0 : field.onFocus, onFocus),\n    onBlur: callAllHandlers(field == null ? void 0 : field.onBlur, onBlur)\n  });\n}\n\n/**\n * Used to provide feedback about an invalid input,\n * and suggest clear instructions on how to fix it.\n */\nvar FormErrorMessage = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useMultiStyleConfig(\"FormError\", props);\n  var ownProps = omitThemingProps(props);\n  var field = useFormControlContext();\n  if (!(field != null && field.isInvalid)) return null;\n  return /*#__PURE__*/React.createElement(StylesProvider, {\n    value: styles\n  }, /*#__PURE__*/React.createElement(chakra.div, _extends({}, field == null ? void 0 : field.getErrorMessageProps(ownProps, ref), {\n    className: cx(\"chakra-form__error-message\", props.className),\n    __css: _extends({\n      display: \"flex\",\n      alignItems: \"center\"\n    }, styles.text)\n  })));\n});\n\nif (__DEV__) {\n  FormErrorMessage.displayName = \"FormErrorMessage\";\n}\n/**\n * Used as the visual indicator that a field is invalid or\n * a field has incorrect values.\n */\n\n\nvar FormErrorIcon = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useStyles();\n  var field = useFormControlContext();\n  if (!(field != null && field.isInvalid)) return null;\n\n  var _className = cx(\"chakra-form__error-icon\", props.className);\n\n  return /*#__PURE__*/React.createElement(Icon, _extends({\n    ref: ref,\n    \"aria-hidden\": true\n  }, props, {\n    __css: styles.icon,\n    className: _className\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M11.983,0a12.206,12.206,0,0,0-8.51,3.653A11.8,11.8,0,0,0,0,12.207,11.779,11.779,0,0,0,11.8,24h.214A12.111,12.111,0,0,0,24,11.791h0A11.766,11.766,0,0,0,11.983,0ZM10.5,16.542a1.476,1.476,0,0,1,1.449-1.53h.027a1.527,1.527,0,0,1,1.523,1.47,1.475,1.475,0,0,1-1.449,1.53h-.027A1.529,1.529,0,0,1,10.5,16.542ZM11,12.5v-6a1,1,0,0,1,2,0v6a1,1,0,1,1-2,0Z\"\n  }));\n});\n\nif (__DEV__) {\n  FormErrorIcon.displayName = \"FormErrorIcon\";\n}\n\nvar _excluded = [\"className\", \"children\", \"requiredIndicator\", \"optionalIndicator\"];\n\n/**\n * Used to enhance the usability of form controls.\n *\n * It is used to inform users as to what information\n * is requested for a form field.\n *\n * ♿️ Accessibility: Every form field should have a form label.\n */\nvar FormLabel = /*#__PURE__*/forwardRef(function (passedProps, ref) {\n  var _field$getLabelProps;\n\n  var styles = useStyleConfig(\"FormLabel\", passedProps);\n  var props = omitThemingProps(passedProps);\n\n  props.className;\n      var children = props.children,\n      _props$requiredIndica = props.requiredIndicator,\n      requiredIndicator = _props$requiredIndica === void 0 ? /*#__PURE__*/React.createElement(RequiredIndicator, null) : _props$requiredIndica,\n      _props$optionalIndica = props.optionalIndicator,\n      optionalIndicator = _props$optionalIndica === void 0 ? null : _props$optionalIndica,\n      rest = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var field = useFormControlContext();\n  var ownProps = (_field$getLabelProps = field == null ? void 0 : field.getLabelProps(rest, ref)) != null ? _field$getLabelProps : _extends({\n    ref: ref\n  }, rest);\n  return /*#__PURE__*/React.createElement(chakra.label, _extends({}, ownProps, {\n    className: cx(\"chakra-form__label\", props.className),\n    __css: _extends({\n      display: \"block\",\n      textAlign: \"start\"\n    }, styles)\n  }), children, field != null && field.isRequired ? requiredIndicator : optionalIndicator);\n});\n\nif (__DEV__) {\n  FormLabel.displayName = \"FormLabel\";\n}\n\n/**\n * Used to show a \"required\" text or an asterisks (*) to indicate that\n * a field is required.\n */\nvar RequiredIndicator = /*#__PURE__*/forwardRef(function (props, ref) {\n  var field = useFormControlContext();\n  var styles = useStyles();\n  if (!(field != null && field.isRequired)) return null;\n  var className = cx(\"chakra-form__required-indicator\", props.className);\n  return /*#__PURE__*/React.createElement(chakra.span, _extends({}, field == null ? void 0 : field.getRequiredIndicatorProps(props, ref), {\n    __css: styles.requiredIndicator,\n    className: className\n  }));\n});\n\nif (__DEV__) {\n  RequiredIndicator.displayName = \"RequiredIndicator\";\n}\n\nexport { FormControl, FormErrorIcon, FormErrorMessage, FormHelperText, FormLabel, RequiredIndicator, useFormControl, useFormControlContext, useFormControlProps };\n"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_excluded","Textarea","forwardRef","props","ref","styles","useStyleConfig","_omitThemingProps","omitThemingProps","className","rows","rest","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","textareaProps","useFormControl","textareaStyles","omit","React","chakra","cx","__css","__DEV__","displayName","foregroundColor","UseThemeColors","useState","fieldState","setFieldState","useThoughtRecord","label","onSubmit","isSubmitting","thoughtRecord","currentQuestion","isValidQuestion","useEffect","isKeyOfThoughtRecord","value","spacing","rounded","w","minH","flexDirection","mt","alignContent","justifyContent","mx","px","py","offsetY","offsetX","transition","enter","duration","exit","delay","style","display","height","width","in","placeholder","onChange","event","color","_placeholder","fontSize","p","bg","h","size","disabled","variant","alignSelf","isLoading","background","loadingText","onClick","LoadingTextField","toast","useToast","navigate","useNavigate","useLocation","pathname","state","setThoughtRecord","setIsValidQuestion","logout","useAuth","authHeader","getAuthHeader","setIsSubmitting","handleFetch","endPoint","fetchOptions","fetch","response","ok","json","data","status","Error","statusText","getActiveThoughtRecord","token","thoughtRecordEndPoint","isThoughtRecord","getNewThoughtRecord","options","method","saveThoughtRecord","saveOptions","headers","Accept","userEndPoint","updateThoughtRecord","activeThoughtRecord","updateKey","updateOptions","body","JSON","stringify","useThoughtRecordApi","getToken","isQuestion","lastValid","question","path","thoughtRecordKey","slice","getLastValid","getThoughtRecord","description","NextLinkIndex","updatedRecord","thoughtRecordData","_excluded$2","_excluded2$1","_createContext","createContext","strict","name","FormControlProvider","useFormControlContext","FormControl","useMultiStyleConfig","_useFormControlProvid","idProp","id","isRequired","isInvalid","isDisabled","isReadOnly","htmlProps","uuid","useId","labelId","feedbackId","helpTextId","_React$useState","hasFeedbackText","setHasFeedbackText","_React$useState2","hasHelpText","setHasHelpText","_useBoolean","useBoolean","isFocused","setFocus","getHelpTextProps","forwardedRef","mergeRefs","node","getLabelProps","_props$id","_props$htmlFor","dataAttr","htmlFor","getErrorMessageProps","getRootProps","role","getRequiredIndicatorProps","children","onFocus","on","onBlur","off","useFormControlProvider","context","StylesProvider","FormHelperText","field","useStyles","helperText","_excluded$1","_excluded2","_useFormControlProps","_ref","_ref2","_ref3","readOnly","required","labelIds","push","join","undefined","callAllHandlers","useFormControlProps","ariaAttr","FormErrorMessage","ownProps","alignItems","text","FormErrorIcon","_className","Icon","icon","fill","d","FormLabel","passedProps","_field$getLabelProps","_props$requiredIndica","requiredIndicator","RequiredIndicator","_props$optionalIndica","optionalIndicator","textAlign"],"sourceRoot":""}