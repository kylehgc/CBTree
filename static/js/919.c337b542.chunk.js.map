{"version":3,"file":"static/js/919.c337b542.chunk.js","mappings":"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","sources":["../node_modules/@chakra-ui/avatar/dist/chakra-ui-avatar.esm.js","Components/Nav/LoggedInNav.tsx"],"sourcesContent":["import { useImage } from '@chakra-ui/image';\nimport { forwardRef, useStyles, chakra, useMultiStyleConfig, omitThemingProps, StylesProvider } from '@chakra-ui/system';\nimport { cx, __DEV__, filterUndefined } from '@chakra-ui/utils';\nimport * as React from 'react';\nimport { getValidChildren } from '@chakra-ui/react-utils';\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar _excluded$1 = [\"name\", \"getInitials\"],\n    _excluded2 = [\"src\", \"srcSet\", \"name\", \"showBorder\", \"borderRadius\", \"onError\", \"getInitials\", \"icon\", \"iconLabel\", \"loading\", \"children\", \"borderColor\", \"ignoreFallback\"];\n\n/**\n * AvatarBadge used to show extra badge to the top-right\n * or bottom-right corner of an avatar.\n */\nvar AvatarBadge = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useStyles();\n\n  var badgeStyles = _extends({\n    position: \"absolute\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    insetEnd: \"0\",\n    bottom: \"0\"\n  }, styles.badge);\n\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    ref: ref\n  }, props, {\n    className: cx(\"chakra-avatar__badge\", props.className),\n    __css: badgeStyles\n  }));\n});\n\nif (__DEV__) {\n  AvatarBadge.displayName = \"AvatarBadge\";\n}\n\nfunction initials(name) {\n  var _name$split = name.split(\" \"),\n      firstName = _name$split[0],\n      lastName = _name$split[1];\n\n  return firstName && lastName ? \"\" + firstName.charAt(0) + lastName.charAt(0) : firstName.charAt(0);\n}\n\n/**\n * The avatar name container\n */\nvar AvatarName = function AvatarName(props) {\n  var name = props.name,\n      getInitials = props.getInitials,\n      rest = _objectWithoutPropertiesLoose(props, _excluded$1);\n\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    role: \"img\",\n    \"aria-label\": name\n  }, rest, {\n    __css: styles.label\n  }), name ? getInitials == null ? void 0 : getInitials(name) : null);\n};\n/**\n * Fallback avatar react component.\n * This should be a generic svg used to represent an avatar\n */\n\n\nvar DefaultIcon = function DefaultIcon(props) {\n  return /*#__PURE__*/React.createElement(chakra.svg, _extends({\n    viewBox: \"0 0 128 128\",\n    color: \"#fff\",\n    width: \"100%\",\n    height: \"100%\",\n    className: \"chakra-avatar__svg\"\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M103,102.1388 C93.094,111.92 79.3504,118 64.1638,118 C48.8056,118 34.9294,111.768 25,101.7892 L25,95.2 C25,86.8096 31.981,80 40.6,80 L87.4,80 C96.019,80 103,86.8096 103,95.2 L103,102.1388 Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M63.9961647,24 C51.2938136,24 41,34.2938136 41,46.9961647 C41,59.7061864 51.2938136,70 63.9961647,70 C76.6985159,70 87,59.7061864 87,46.9961647 C87,34.2938136 76.6985159,24 63.9961647,24\"\n  }));\n};\n\nvar baseStyle = {\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  textAlign: \"center\",\n  textTransform: \"uppercase\",\n  fontWeight: \"medium\",\n  position: \"relative\",\n  flexShrink: 0\n};\n\n/**\n * Avatar component that renders an user avatar with\n * support for fallback avatar and name-only avatars\n */\nvar Avatar = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useMultiStyleConfig(\"Avatar\", props);\n\n  var _omitThemingProps = omitThemingProps(props),\n      src = _omitThemingProps.src,\n      srcSet = _omitThemingProps.srcSet,\n      name = _omitThemingProps.name,\n      showBorder = _omitThemingProps.showBorder,\n      _omitThemingProps$bor = _omitThemingProps.borderRadius,\n      borderRadius = _omitThemingProps$bor === void 0 ? \"full\" : _omitThemingProps$bor,\n      onError = _omitThemingProps.onError,\n      _omitThemingProps$get = _omitThemingProps.getInitials,\n      getInitials = _omitThemingProps$get === void 0 ? initials : _omitThemingProps$get,\n      _omitThemingProps$ico = _omitThemingProps.icon,\n      icon = _omitThemingProps$ico === void 0 ? /*#__PURE__*/React.createElement(DefaultIcon, null) : _omitThemingProps$ico,\n      _omitThemingProps$ico2 = _omitThemingProps.iconLabel,\n      iconLabel = _omitThemingProps$ico2 === void 0 ? \" avatar\" : _omitThemingProps$ico2,\n      loading = _omitThemingProps.loading,\n      children = _omitThemingProps.children,\n      borderColor = _omitThemingProps.borderColor,\n      ignoreFallback = _omitThemingProps.ignoreFallback,\n      rest = _objectWithoutPropertiesLoose(_omitThemingProps, _excluded2);\n\n  var avatarStyles = _extends({\n    borderRadius: borderRadius,\n    borderWidth: showBorder ? \"2px\" : undefined\n  }, baseStyle, styles.container);\n\n  if (borderColor) {\n    avatarStyles.borderColor = borderColor;\n  }\n\n  return /*#__PURE__*/React.createElement(chakra.span, _extends({\n    ref: ref\n  }, rest, {\n    className: cx(\"chakra-avatar\", props.className),\n    __css: avatarStyles\n  }), /*#__PURE__*/React.createElement(StylesProvider, {\n    value: styles\n  }, /*#__PURE__*/React.createElement(AvatarImage, {\n    src: src,\n    srcSet: srcSet,\n    loading: loading,\n    onError: onError,\n    getInitials: getInitials,\n    name: name,\n    borderRadius: borderRadius,\n    icon: icon,\n    iconLabel: iconLabel,\n    ignoreFallback: ignoreFallback\n  }), children));\n});\n\nif (__DEV__) {\n  Avatar.displayName = \"Avatar\";\n}\n\nvar AvatarImage = function AvatarImage(props) {\n  var src = props.src,\n      srcSet = props.srcSet,\n      onError = props.onError,\n      getInitials = props.getInitials,\n      name = props.name,\n      borderRadius = props.borderRadius,\n      loading = props.loading,\n      iconLabel = props.iconLabel,\n      _props$icon = props.icon,\n      icon = _props$icon === void 0 ? /*#__PURE__*/React.createElement(DefaultIcon, null) : _props$icon,\n      ignoreFallback = props.ignoreFallback;\n  /**\n   * use the image hook to only show the image when it has loaded\n   */\n\n  var status = useImage({\n    src: src,\n    onError: onError,\n    ignoreFallback: ignoreFallback\n  });\n  var hasLoaded = status === \"loaded\";\n  /**\n   * Fallback avatar applies under 2 conditions:\n   * - If `src` was passed and the image has not loaded or failed to load\n   * - If `src` wasn't passed\n   *\n   * In this case, we'll show either the name avatar or default avatar\n   */\n\n  var showFallback = !src || !hasLoaded;\n\n  if (showFallback) {\n    return name ? /*#__PURE__*/React.createElement(AvatarName, {\n      className: \"chakra-avatar__initials\",\n      getInitials: getInitials,\n      name: name\n    }) : /*#__PURE__*/React.cloneElement(icon, {\n      role: \"img\",\n      \"aria-label\": iconLabel\n    });\n  }\n  /**\n   * If `src` was passed and the image has loaded, we'll show it\n   */\n\n\n  return /*#__PURE__*/React.createElement(chakra.img, {\n    src: src,\n    srcSet: srcSet,\n    alt: name,\n    className: \"chakra-avatar__img\",\n    loading: loading,\n    __css: {\n      width: \"100%\",\n      height: \"100%\",\n      objectFit: \"cover\",\n      borderRadius: borderRadius\n    }\n  });\n};\n\nif (__DEV__) {\n  AvatarImage.displayName = \"AvatarImage\";\n}\n\nvar _excluded = [\"children\", \"borderColor\", \"max\", \"spacing\", \"borderRadius\"];\n\n/**\n * AvatarGroup displays a number of avatars grouped together in a stack.\n */\nvar AvatarGroup = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useMultiStyleConfig(\"Avatar\", props);\n\n  var _omitThemingProps = omitThemingProps(props),\n      children = _omitThemingProps.children,\n      borderColor = _omitThemingProps.borderColor,\n      max = _omitThemingProps.max,\n      _omitThemingProps$spa = _omitThemingProps.spacing,\n      spacing = _omitThemingProps$spa === void 0 ? \"-0.75rem\" : _omitThemingProps$spa,\n      _omitThemingProps$bor = _omitThemingProps.borderRadius,\n      borderRadius = _omitThemingProps$bor === void 0 ? \"full\" : _omitThemingProps$bor,\n      rest = _objectWithoutPropertiesLoose(_omitThemingProps, _excluded);\n\n  var validChildren = getValidChildren(children);\n  /**\n   * get the avatars within the max\n   */\n\n  var childrenWithinMax = max ? validChildren.slice(0, max) : validChildren;\n  /**\n   * get the remaining avatar count\n   */\n\n  var excess = max != null && validChildren.length - max;\n  /**\n   * Reversing the children is a great way to avoid using zIndex\n   * to overlap the avatars\n   */\n\n  var reversedChildren = childrenWithinMax.reverse();\n  var clones = reversedChildren.map(function (child, index) {\n    var _child$props$borderCo;\n\n    var isFirstAvatar = index === 0;\n    var childProps = {\n      marginEnd: isFirstAvatar ? 0 : spacing,\n      size: props.size,\n      borderColor: (_child$props$borderCo = child.props.borderColor) != null ? _child$props$borderCo : borderColor,\n      showBorder: true\n    };\n    return /*#__PURE__*/React.cloneElement(child, filterUndefined(childProps));\n  });\n  var groupStyles = {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    flexDirection: \"row-reverse\"\n  };\n\n  var excessStyles = _extends({\n    borderRadius: borderRadius,\n    marginStart: spacing\n  }, baseStyle, styles.excessLabel);\n\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    ref: ref,\n    role: \"group\",\n    __css: groupStyles\n  }, rest, {\n    className: cx(\"chakra-avatar__group\", props.className)\n  }), excess > 0 && /*#__PURE__*/React.createElement(chakra.span, {\n    className: \"chakra-avatar__excess\",\n    __css: excessStyles\n  }, \"+\" + excess), clones);\n});\n\nif (__DEV__) {\n  AvatarGroup.displayName = \"AvatarGroup\";\n}\n\nexport { Avatar, AvatarBadge, AvatarGroup, baseStyle };\n","import {\n\tMenu,\n\tMenuButton,\n\tButton,\n\tAvatar,\n\tMenuList,\n\tCenter,\n\tMenuDivider,\n\tMenuItem,\n\tLink,\n} from '@chakra-ui/react'\nimport { useNavigate, Link as BrowserLink } from 'react-router-dom'\nimport useAuth from '../../Hooks/useAuth'\nimport UseThemeColors from '../../Hooks/useThemeColors'\nimport useThoughtRecordApi from '../../Hooks/useThoughtRecordApi'\n\ninterface Props {\n\tdisplayName: string\n}\n\nconst LoggedInNav: React.FC<Props> = ({ displayName }) => {\n\tconst { getNewThoughtRecord } = useThoughtRecordApi()\n\tconst { backgroundColor, foregroundColor } = UseThemeColors()\n\tconst navigate = useNavigate()\n\tconst { logout } = useAuth()\n\n\tconst handleNewThoughtRecord = async () => {\n\t\tawait getNewThoughtRecord()\n\t\tnavigate('/emotion')\n\t}\n\n\tconst handleLogout = () => {\n\t\tlogout()\n\t\tnavigate('/')\n\t}\n\n\treturn (\n\t\t<Menu>\n\t\t\t<MenuButton\n\t\t\t\tbg={backgroundColor}\n\t\t\t\tas={Button}\n\t\t\t\trounded={'full'}\n\t\t\t\tvariant={'link'}\n\t\t\t\tcursor={'pointer'}\n\t\t\t\tminW={0}\n\t\t\t>\n\t\t\t\t<Avatar\n\t\t\t\t\tname={displayName}\n\t\t\t\t\tsize=\"md\"\n\t\t\t\t\tcolor={backgroundColor}\n\t\t\t\t\tbg={foregroundColor}\n\t\t\t\t/>\n\t\t\t</MenuButton>\n\t\t\t<MenuList p={2} alignItems={'center'} zIndex={'overlay'}>\n\t\t\t\t<br />\n\t\t\t\t<Center>\n\t\t\t\t\t<Avatar\n\t\t\t\t\t\tsize={'2xl'}\n\t\t\t\t\t\tbg={backgroundColor}\n\t\t\t\t\t\tcolor={foregroundColor}\n\t\t\t\t\t\tname={displayName}\n\t\t\t\t\t/>\n\t\t\t\t</Center>\n\t\t\t\t<br />\n\t\t\t\t<Center>\n\t\t\t\t\t<p>{displayName}</p>\n\t\t\t\t</Center>\n\t\t\t\t<br />\n\t\t\t\t<MenuDivider />\n\t\t\t\t<MenuItem>\n\t\t\t\t\t<Link as={BrowserLink} to={'/profile'}>\n\t\t\t\t\t\tYour Thought Records\n\t\t\t\t\t</Link>{' '}\n\t\t\t\t</MenuItem>\n\t\t\t\t<MenuItem onClick={handleNewThoughtRecord}>New Thought Record</MenuItem>\n\t\t\t\t<MenuItem onClick={handleLogout}>Logout</MenuItem>\n\t\t\t</MenuList>\n\t\t</Menu>\n\t)\n}\n\nexport default LoggedInNav\n"],"names":["_objectWithoutPropertiesLoose","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","_extends","assign","arguments","prototype","hasOwnProperty","call","apply","this","_excluded$1","_excluded2","AvatarBadge","forwardRef","props","ref","badgeStyles","position","display","alignItems","justifyContent","insetEnd","bottom","useStyles","badge","React","chakra","className","cx","__css","initials","name","_name$split","split","firstName","lastName","charAt","__DEV__","displayName","AvatarName","getInitials","rest","styles","role","label","DefaultIcon","viewBox","color","width","height","fill","d","baseStyle","textAlign","textTransform","fontWeight","flexShrink","Avatar","useMultiStyleConfig","_omitThemingProps","omitThemingProps","src","srcSet","showBorder","_omitThemingProps$bor","borderRadius","onError","_omitThemingProps$get","_omitThemingProps$ico","icon","_omitThemingProps$ico2","iconLabel","loading","children","borderColor","ignoreFallback","avatarStyles","borderWidth","undefined","container","StylesProvider","value","AvatarImage","_props$icon","status","useImage","alt","objectFit","_excluded","AvatarGroup","max","_omitThemingProps$spa","spacing","validChildren","getValidChildren","childrenWithinMax","slice","excess","clones","reverse","map","child","index","_child$props$borderCo","childProps","marginEnd","size","filterUndefined","excessStyles","marginStart","excessLabel","flexDirection","getNewThoughtRecord","useThoughtRecordApi","UseThemeColors","backgroundColor","foregroundColor","navigate","useNavigate","logout","useAuth","handleNewThoughtRecord","bg","as","Button","rounded","variant","cursor","minW","p","zIndex","BrowserLink","to","onClick"],"sourceRoot":""}