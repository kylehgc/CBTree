{"version":3,"file":"static/js/911.e5a3ffa6.chunk.js","mappings":"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","sources":["Components/ThoughtRecordQuestions/AlternativeThought.tsx","../node_modules/@chakra-ui/form-control/dist/chakra-ui-form-control.esm.js","../node_modules/@chakra-ui/textarea/dist/chakra-ui-textarea.esm.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["import {\n\tBox,\n\tHeading,\n\tVStack,\n\tTextarea,\n\tButton,\n\tSlideFade,\n\tLightMode,\n} from '@chakra-ui/react'\nimport { useEffect, useState } from 'react'\nimport useThoughtRecord from '../../Hooks/UseThoughtRecord'\nimport useThemeColors from '../../Hooks/useThemeColors'\nimport ArgumentButtons from './ArgumentAccordion'\nimport MoodSlider from './MoodSlider'\nimport { Mood } from '../../types'\nimport LoadingTextField from '../Loading/LoadingTextField'\nimport HotThoughtDisplay from '../ThoughtRecordDisplay/HotThoughtDisplay'\n\nconst AlternativeThought: React.FC = () => {\n\tconst { foregroundColor, textColor } = useThemeColors()\n\tconst [balancedThought, setBalancedThought] = useState<string>('')\n\tconst [moods, setMoods] = useState<Mood[]>([])\n\tconst { onSubmit, thoughtRecord, isSubmitting, isValidQuestion } =\n\t\tuseThoughtRecord()\n\n\tuseEffect(() => {\n\t\tif (thoughtRecord?.alternativethought) {\n\t\t\tsetMoods(thoughtRecord.alternativethought)\n\t\t}\n\t}, [thoughtRecord, setMoods])\n\n\tconst argFor = thoughtRecord?.evidencefor ? thoughtRecord.evidencefor : ''\n\tconst argAgainst = thoughtRecord?.evidenceagainst\n\t\t? thoughtRecord.evidenceagainst\n\t\t: ''\n\tconst argumentsText = { argFor: argFor, argAgainst: argAgainst }\n\tconst hotThought = thoughtRecord?.thoughts\n\t\t? thoughtRecord.thoughts.hotThought\n\t\t: ''\n\n\tconst handleOnChange: React.ChangeEventHandler<HTMLTextAreaElement> = (\n\t\tevent,\n\t) => {\n\t\tsetBalancedThought(event.target.value)\n\t}\n\n\tconst addMood = (mood: string) => {\n\t\tif (!moods.map((mood) => mood.mood).includes(mood) && mood) {\n\t\t\tsetMoods([...moods, { mood: mood, moodRating: 0 }])\n\t\t}\n\t\tsetBalancedThought('')\n\t}\n\n\tif (!thoughtRecord || !isValidQuestion) {\n\t\treturn <LoadingTextField />\n\t}\n\treturn (\n\t\t<VStack\n\t\t\toverflow={'visible'}\n\t\t\tmt={1}\n\t\t\tspacing={8}\n\t\t\tp={1}\n\t\t\th=\"full\"\n\t\t\tw={{ base: 'full', lg: 'full' }}\n\t\t>\n\t\t\t<Heading m={0} textAlign={'center'}>\n\t\t\t\tWrite a Balanced Thought\n\t\t\t</Heading>\n\t\t\t<SlideFade\n\t\t\t\tin={!isSubmitting}\n\t\t\t\tstyle={{\n\t\t\t\t\tflexDirection: 'column',\n\t\t\t\t\theight: 'full',\n\t\t\t\t\twidth: '95%',\n\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t}}\n\t\t\t\ttransition={{\n\t\t\t\t\tenter: { duration: 0.5 },\n\t\t\t\t\texit: { duration: 0.5, delay: 0.5 },\n\t\t\t\t}}\n\t\t\t\toffsetY={0}\n\t\t\t\toffsetX={100}\n\t\t\t>\n\t\t\t\t<HotThoughtDisplay hotThought={hotThought} />\n\t\t\t</SlideFade>\n\t\t\t<SlideFade\n\t\t\t\tin={!isSubmitting}\n\t\t\t\tstyle={{\n\t\t\t\t\tflexDirection: 'column',\n\t\t\t\t\theight: 'full',\n\t\t\t\t\twidth: '95%',\n\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t}}\n\t\t\t\ttransition={{\n\t\t\t\t\tenter: { duration: 0.5, delay: 0.3 },\n\t\t\t\t\texit: { duration: 0.5, delay: 0.3 },\n\t\t\t\t}}\n\t\t\t\toffsetY={0}\n\t\t\t\toffsetX={-100}\n\t\t\t>\n\t\t\t\t<ArgumentButtons argumentsText={argumentsText} />\n\t\t\t</SlideFade>\n\t\t\t<SlideFade\n\t\t\t\tin={!isSubmitting}\n\t\t\t\tstyle={{\n\t\t\t\t\tflexDirection: 'column',\n\t\t\t\t\talignContent: 'center',\n\t\t\t\t\theight: 'full',\n\t\t\t\t\twidth: '95%',\n\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t}}\n\t\t\t\ttransition={{\n\t\t\t\t\tenter: { duration: 0.5, delay: 0.5 },\n\t\t\t\t\texit: { duration: 0.5 },\n\t\t\t\t}}\n\t\t\t\toffsetY={0}\n\t\t\t\toffsetX={100}\n\t\t\t>\n\t\t\t\t<LightMode>\n\t\t\t\t\t<Textarea\n\t\t\t\t\t\tcolor={textColor}\n\t\t\t\t\t\tonChange={handleOnChange}\n\t\t\t\t\t\tvalue={balancedThought}\n\t\t\t\t\t\tsize=\"lg\"\n\t\t\t\t\t\tp={1}\n\t\t\t\t\t\talignSelf={'center'}\n\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\tbg={foregroundColor}\n\t\t\t\t\t\tw={'90%'}\n\t\t\t\t\t\t_placeholder={{ color: textColor, textAlign: 'left', opacity: 0.8 }}\n\t\t\t\t\t\tplaceholder=\"Write some balanced thoughts\"\n\t\t\t\t\t/>\n\t\t\t\t</LightMode>\n\t\t\t\t<Button\n\t\t\t\t\tonClick={() => addMood(balancedThought)}\n\t\t\t\t\tbg={foregroundColor}\n\t\t\t\t\talignSelf={'center'}\n\t\t\t\t\tw={'60%'}\n\t\t\t\t\tminH={10}\n\t\t\t\t\tmb={4}\n\t\t\t\t\tmt={7}\n\t\t\t\t>\n\t\t\t\t\tAdd Thought\n\t\t\t\t</Button>\n\t\t\t</SlideFade>\n\n\t\t\t<MoodSlider moods={moods} setMoods={setMoods} />\n\t\t\t{moods.length > 0 ? (\n\t\t\t\t<Button\n\t\t\t\t\tminH={10}\n\t\t\t\t\tw=\"60%\"\n\t\t\t\t\tisLoading={isSubmitting}\n\t\t\t\t\tbg={foregroundColor}\n\t\t\t\t\tloadingText={'Submitting'}\n\t\t\t\t\tonClick={() => onSubmit(moods)}\n\t\t\t\t>\n\t\t\t\t\tSubmit\n\t\t\t\t</Button>\n\t\t\t) : null}\n\t\t\t<Box h={'10vh'} />\n\t\t</VStack>\n\t)\n}\n\nexport default AlternativeThought\n","import { useId, useBoolean } from '@chakra-ui/hooks';\nimport { forwardRef, useMultiStyleConfig, omitThemingProps, StylesProvider, chakra, useStyles, useStyleConfig } from '@chakra-ui/system';\nimport { cx, __DEV__, dataAttr, callAllHandlers, ariaAttr } from '@chakra-ui/utils';\nimport { createContext, mergeRefs } from '@chakra-ui/react-utils';\nimport * as React from 'react';\nimport Icon from '@chakra-ui/icon';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar _excluded$2 = [\"id\", \"isRequired\", \"isInvalid\", \"isDisabled\", \"isReadOnly\"],\n    _excluded2$1 = [\"getRootProps\", \"htmlProps\"];\n\nvar _createContext = createContext({\n  strict: false,\n  name: \"FormControlContext\"\n}),\n    FormControlProvider = _createContext[0],\n    useFormControlContext = _createContext[1];\n\nfunction useFormControlProvider(props) {\n  var idProp = props.id,\n      isRequired = props.isRequired,\n      isInvalid = props.isInvalid,\n      isDisabled = props.isDisabled,\n      isReadOnly = props.isReadOnly,\n      htmlProps = _objectWithoutPropertiesLoose(props, _excluded$2); // Generate all the required ids\n\n\n  var uuid = useId();\n  var id = idProp || \"field-\" + uuid;\n  var labelId = id + \"-label\";\n  var feedbackId = id + \"-feedback\";\n  var helpTextId = id + \"-helptext\";\n  /**\n   * Track whether the `FormErrorMessage` has been rendered.\n   * We use this to append its id the `aria-describedby` of the `input`.\n   */\n\n  var _React$useState = React.useState(false),\n      hasFeedbackText = _React$useState[0],\n      setHasFeedbackText = _React$useState[1];\n  /**\n   * Track whether the `FormHelperText` has been rendered.\n   * We use this to append its id the `aria-describedby` of the `input`.\n   */\n\n\n  var _React$useState2 = React.useState(false),\n      hasHelpText = _React$useState2[0],\n      setHasHelpText = _React$useState2[1]; // Track whether the form element (e.g, `input`) has focus.\n\n\n  var _useBoolean = useBoolean(),\n      isFocused = _useBoolean[0],\n      setFocus = _useBoolean[1];\n\n  var getHelpTextProps = React.useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    return _extends({\n      id: helpTextId\n    }, props, {\n      /**\n       * Notify the field context when the help text is rendered on screen,\n       * so we can apply the correct `aria-describedby` to the field (e.g. input, textarea).\n       */\n      ref: mergeRefs(forwardedRef, function (node) {\n        if (!node) return;\n        setHasHelpText(true);\n      })\n    });\n  }, [helpTextId]);\n  var getLabelProps = React.useCallback(function (props, forwardedRef) {\n    var _props$id, _props$htmlFor;\n\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    return _extends({}, props, {\n      ref: forwardedRef,\n      \"data-focus\": dataAttr(isFocused),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(isInvalid),\n      \"data-readonly\": dataAttr(isReadOnly),\n      id: (_props$id = props.id) != null ? _props$id : labelId,\n      htmlFor: (_props$htmlFor = props.htmlFor) != null ? _props$htmlFor : id\n    });\n  }, [id, isDisabled, isFocused, isInvalid, isReadOnly, labelId]);\n  var getErrorMessageProps = React.useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    return _extends({\n      id: feedbackId\n    }, props, {\n      /**\n       * Notify the field context when the error message is rendered on screen,\n       * so we can apply the correct `aria-describedby` to the field (e.g. input, textarea).\n       */\n      ref: mergeRefs(forwardedRef, function (node) {\n        if (!node) return;\n        setHasFeedbackText(true);\n      }),\n      \"aria-live\": \"polite\"\n    });\n  }, [feedbackId]);\n  var getRootProps = React.useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    return _extends({}, props, htmlProps, {\n      ref: forwardedRef,\n      role: \"group\"\n    });\n  }, [htmlProps]);\n  var getRequiredIndicatorProps = React.useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    return _extends({}, props, {\n      ref: forwardedRef,\n      role: \"presentation\",\n      \"aria-hidden\": true,\n      children: props.children || \"*\"\n    });\n  }, []);\n  return {\n    isRequired: !!isRequired,\n    isInvalid: !!isInvalid,\n    isReadOnly: !!isReadOnly,\n    isDisabled: !!isDisabled,\n    isFocused: !!isFocused,\n    onFocus: setFocus.on,\n    onBlur: setFocus.off,\n    hasFeedbackText: hasFeedbackText,\n    setHasFeedbackText: setHasFeedbackText,\n    hasHelpText: hasHelpText,\n    setHasHelpText: setHasHelpText,\n    id: id,\n    labelId: labelId,\n    feedbackId: feedbackId,\n    helpTextId: helpTextId,\n    htmlProps: htmlProps,\n    getHelpTextProps: getHelpTextProps,\n    getErrorMessageProps: getErrorMessageProps,\n    getRootProps: getRootProps,\n    getLabelProps: getLabelProps,\n    getRequiredIndicatorProps: getRequiredIndicatorProps\n  };\n}\n\n/**\n * FormControl provides context such as\n * `isInvalid`, `isDisabled`, and `isRequired` to form elements.\n *\n * This is commonly used in form elements such as `input`,\n * `select`, `textarea`, etc.\n */\nvar FormControl = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useMultiStyleConfig(\"Form\", props);\n  var ownProps = omitThemingProps(props);\n\n  var _useFormControlProvid = useFormControlProvider(ownProps),\n      getRootProps = _useFormControlProvid.getRootProps;\n      _useFormControlProvid.htmlProps;\n      var context = _objectWithoutPropertiesLoose(_useFormControlProvid, _excluded2$1);\n\n  var className = cx(\"chakra-form-control\", props.className);\n  return /*#__PURE__*/React.createElement(FormControlProvider, {\n    value: context\n  }, /*#__PURE__*/React.createElement(StylesProvider, {\n    value: styles\n  }, /*#__PURE__*/React.createElement(chakra.div, _extends({}, getRootProps({}, ref), {\n    className: className,\n    __css: styles[\"container\"]\n  }))));\n});\n\nif (__DEV__) {\n  FormControl.displayName = \"FormControl\";\n}\n\n/**\n * FormHelperText\n *\n * Assistive component that conveys additional guidance\n * about the field, such as how it will be used and what\n * types in values should be provided.\n */\nvar FormHelperText = /*#__PURE__*/forwardRef(function (props, ref) {\n  var field = useFormControlContext();\n  var styles = useStyles();\n  var className = cx(\"chakra-form__helper-text\", props.className);\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({}, field == null ? void 0 : field.getHelpTextProps(props, ref), {\n    __css: styles.helperText,\n    className: className\n  }));\n});\n\nif (__DEV__) {\n  FormHelperText.displayName = \"FormHelperText\";\n}\n\nvar _excluded$1 = [\"isDisabled\", \"isInvalid\", \"isReadOnly\", \"isRequired\"],\n    _excluded2 = [\"id\", \"disabled\", \"readOnly\", \"required\", \"isRequired\", \"isInvalid\", \"isReadOnly\", \"isDisabled\", \"onFocus\", \"onBlur\"];\n\n/**\n * React hook that provides the props that should be spread on to\n * input fields (`input`, `select`, `textarea`, etc.).\n *\n * It provides a convenient way to control a form fields, validation\n * and helper text.\n *\n * @internal\n */\nfunction useFormControl(props) {\n  var _useFormControlProps = useFormControlProps(props),\n      isDisabled = _useFormControlProps.isDisabled,\n      isInvalid = _useFormControlProps.isInvalid,\n      isReadOnly = _useFormControlProps.isReadOnly,\n      isRequired = _useFormControlProps.isRequired,\n      rest = _objectWithoutPropertiesLoose(_useFormControlProps, _excluded$1);\n\n  return _extends({}, rest, {\n    disabled: isDisabled,\n    readOnly: isReadOnly,\n    required: isRequired,\n    \"aria-invalid\": ariaAttr(isInvalid),\n    \"aria-required\": ariaAttr(isRequired),\n    \"aria-readonly\": ariaAttr(isReadOnly)\n  });\n}\n/**\n * @internal\n */\n\nfunction useFormControlProps(props) {\n  var _ref, _ref2, _ref3;\n\n  var field = useFormControlContext();\n\n  var id = props.id,\n      disabled = props.disabled,\n      readOnly = props.readOnly,\n      required = props.required,\n      isRequired = props.isRequired,\n      isInvalid = props.isInvalid,\n      isReadOnly = props.isReadOnly,\n      isDisabled = props.isDisabled,\n      onFocus = props.onFocus,\n      onBlur = props.onBlur,\n      rest = _objectWithoutPropertiesLoose(props, _excluded2);\n\n  var labelIds = props[\"aria-describedby\"] ? [props[\"aria-describedby\"]] : []; // Error message must be described first in all scenarios.\n\n  if (field != null && field.hasFeedbackText && field != null && field.isInvalid) {\n    labelIds.push(field.feedbackId);\n  }\n\n  if (field != null && field.hasHelpText) {\n    labelIds.push(field.helpTextId);\n  }\n\n  return _extends({}, rest, {\n    \"aria-describedby\": labelIds.join(\" \") || undefined,\n    id: id != null ? id : field == null ? void 0 : field.id,\n    isDisabled: (_ref = disabled != null ? disabled : isDisabled) != null ? _ref : field == null ? void 0 : field.isDisabled,\n    isReadOnly: (_ref2 = readOnly != null ? readOnly : isReadOnly) != null ? _ref2 : field == null ? void 0 : field.isReadOnly,\n    isRequired: (_ref3 = required != null ? required : isRequired) != null ? _ref3 : field == null ? void 0 : field.isRequired,\n    isInvalid: isInvalid != null ? isInvalid : field == null ? void 0 : field.isInvalid,\n    onFocus: callAllHandlers(field == null ? void 0 : field.onFocus, onFocus),\n    onBlur: callAllHandlers(field == null ? void 0 : field.onBlur, onBlur)\n  });\n}\n\n/**\n * Used to provide feedback about an invalid input,\n * and suggest clear instructions on how to fix it.\n */\nvar FormErrorMessage = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useMultiStyleConfig(\"FormError\", props);\n  var ownProps = omitThemingProps(props);\n  var field = useFormControlContext();\n  if (!(field != null && field.isInvalid)) return null;\n  return /*#__PURE__*/React.createElement(StylesProvider, {\n    value: styles\n  }, /*#__PURE__*/React.createElement(chakra.div, _extends({}, field == null ? void 0 : field.getErrorMessageProps(ownProps, ref), {\n    className: cx(\"chakra-form__error-message\", props.className),\n    __css: _extends({\n      display: \"flex\",\n      alignItems: \"center\"\n    }, styles.text)\n  })));\n});\n\nif (__DEV__) {\n  FormErrorMessage.displayName = \"FormErrorMessage\";\n}\n/**\n * Used as the visual indicator that a field is invalid or\n * a field has incorrect values.\n */\n\n\nvar FormErrorIcon = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useStyles();\n  var field = useFormControlContext();\n  if (!(field != null && field.isInvalid)) return null;\n\n  var _className = cx(\"chakra-form__error-icon\", props.className);\n\n  return /*#__PURE__*/React.createElement(Icon, _extends({\n    ref: ref,\n    \"aria-hidden\": true\n  }, props, {\n    __css: styles.icon,\n    className: _className\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M11.983,0a12.206,12.206,0,0,0-8.51,3.653A11.8,11.8,0,0,0,0,12.207,11.779,11.779,0,0,0,11.8,24h.214A12.111,12.111,0,0,0,24,11.791h0A11.766,11.766,0,0,0,11.983,0ZM10.5,16.542a1.476,1.476,0,0,1,1.449-1.53h.027a1.527,1.527,0,0,1,1.523,1.47,1.475,1.475,0,0,1-1.449,1.53h-.027A1.529,1.529,0,0,1,10.5,16.542ZM11,12.5v-6a1,1,0,0,1,2,0v6a1,1,0,1,1-2,0Z\"\n  }));\n});\n\nif (__DEV__) {\n  FormErrorIcon.displayName = \"FormErrorIcon\";\n}\n\nvar _excluded = [\"className\", \"children\", \"requiredIndicator\", \"optionalIndicator\"];\n\n/**\n * Used to enhance the usability of form controls.\n *\n * It is used to inform users as to what information\n * is requested for a form field.\n *\n * ♿️ Accessibility: Every form field should have a form label.\n */\nvar FormLabel = /*#__PURE__*/forwardRef(function (passedProps, ref) {\n  var _field$getLabelProps;\n\n  var styles = useStyleConfig(\"FormLabel\", passedProps);\n  var props = omitThemingProps(passedProps);\n\n  props.className;\n      var children = props.children,\n      _props$requiredIndica = props.requiredIndicator,\n      requiredIndicator = _props$requiredIndica === void 0 ? /*#__PURE__*/React.createElement(RequiredIndicator, null) : _props$requiredIndica,\n      _props$optionalIndica = props.optionalIndicator,\n      optionalIndicator = _props$optionalIndica === void 0 ? null : _props$optionalIndica,\n      rest = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var field = useFormControlContext();\n  var ownProps = (_field$getLabelProps = field == null ? void 0 : field.getLabelProps(rest, ref)) != null ? _field$getLabelProps : _extends({\n    ref: ref\n  }, rest);\n  return /*#__PURE__*/React.createElement(chakra.label, _extends({}, ownProps, {\n    className: cx(\"chakra-form__label\", props.className),\n    __css: _extends({\n      display: \"block\",\n      textAlign: \"start\"\n    }, styles)\n  }), children, field != null && field.isRequired ? requiredIndicator : optionalIndicator);\n});\n\nif (__DEV__) {\n  FormLabel.displayName = \"FormLabel\";\n}\n\n/**\n * Used to show a \"required\" text or an asterisks (*) to indicate that\n * a field is required.\n */\nvar RequiredIndicator = /*#__PURE__*/forwardRef(function (props, ref) {\n  var field = useFormControlContext();\n  var styles = useStyles();\n  if (!(field != null && field.isRequired)) return null;\n  var className = cx(\"chakra-form__required-indicator\", props.className);\n  return /*#__PURE__*/React.createElement(chakra.span, _extends({}, field == null ? void 0 : field.getRequiredIndicatorProps(props, ref), {\n    __css: styles.requiredIndicator,\n    className: className\n  }));\n});\n\nif (__DEV__) {\n  RequiredIndicator.displayName = \"RequiredIndicator\";\n}\n\nexport { FormControl, FormErrorIcon, FormErrorMessage, FormHelperText, FormLabel, RequiredIndicator, useFormControl, useFormControlContext, useFormControlProps };\n","import { useFormControl } from '@chakra-ui/form-control';\nimport { forwardRef, useStyleConfig, omitThemingProps, chakra } from '@chakra-ui/system';\nimport { omit, cx, __DEV__ } from '@chakra-ui/utils';\nimport * as React from 'react';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar _excluded = [\"className\", \"rows\"];\n\n/**\n * Textarea is used to enter an amount of text that's longer than a single line\n * @see Docs https://chakra-ui.com/textarea\n */\nvar Textarea = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useStyleConfig(\"Textarea\", props);\n\n  var _omitThemingProps = omitThemingProps(props),\n      className = _omitThemingProps.className,\n      rows = _omitThemingProps.rows,\n      rest = _objectWithoutPropertiesLoose(_omitThemingProps, _excluded);\n\n  var textareaProps = useFormControl(rest);\n  var omitted = [\"h\", \"minH\", \"height\", \"minHeight\"];\n  var textareaStyles = rows ? omit(styles, omitted) : styles;\n  return /*#__PURE__*/React.createElement(chakra.textarea, _extends({\n    ref: ref,\n    rows: rows\n  }, textareaProps, {\n    className: cx(\"chakra-textarea\", className),\n    __css: textareaStyles\n  }));\n});\n\nif (__DEV__) {\n  Textarea.displayName = \"Textarea\";\n}\n\nexport { Textarea };\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["useThemeColors","foregroundColor","textColor","useState","balancedThought","setBalancedThought","moods","setMoods","useThoughtRecord","onSubmit","thoughtRecord","isSubmitting","isValidQuestion","useEffect","alternativethought","argumentsText","argFor","evidencefor","argAgainst","evidenceagainst","hotThought","thoughts","overflow","mt","spacing","p","h","w","base","lg","m","textAlign","in","style","flexDirection","height","width","display","transition","enter","duration","exit","delay","offsetY","offsetX","alignContent","color","onChange","event","target","value","size","alignSelf","variant","bg","_placeholder","opacity","placeholder","onClick","mood","map","includes","moodRating","minH","mb","length","isLoading","loadingText","_extends","Object","assign","i","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","_excluded$2","_excluded2$1","_createContext","createContext","strict","name","FormControlProvider","useFormControlContext","FormControl","forwardRef","props","ref","styles","useMultiStyleConfig","_useFormControlProvid","idProp","id","isRequired","isInvalid","isDisabled","isReadOnly","htmlProps","uuid","useId","labelId","feedbackId","helpTextId","_React$useState","React","hasFeedbackText","setHasFeedbackText","_React$useState2","hasHelpText","setHasHelpText","_useBoolean","useBoolean","isFocused","setFocus","getHelpTextProps","forwardedRef","mergeRefs","node","getLabelProps","_props$id","_props$htmlFor","dataAttr","htmlFor","getErrorMessageProps","getRootProps","role","getRequiredIndicatorProps","children","onFocus","on","onBlur","off","useFormControlProvider","omitThemingProps","context","className","cx","StylesProvider","chakra","__css","__DEV__","displayName","FormHelperText","field","useStyles","helperText","_excluded$1","_excluded2","useFormControl","_useFormControlProps","_ref","_ref2","_ref3","disabled","readOnly","required","rest","labelIds","push","join","undefined","callAllHandlers","useFormControlProps","ariaAttr","FormErrorMessage","ownProps","alignItems","text","FormErrorIcon","_className","Icon","icon","fill","d","_excluded","FormLabel","passedProps","_field$getLabelProps","useStyleConfig","_props$requiredIndica","requiredIndicator","RequiredIndicator","_props$optionalIndica","optionalIndicator","Textarea","_omitThemingProps","rows","textareaProps","textareaStyles","omit","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"sourceRoot":""}