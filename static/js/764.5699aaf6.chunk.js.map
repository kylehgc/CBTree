{"version":3,"file":"static/js/764.5699aaf6.chunk.js","mappings":"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","sources":["../node_modules/@chakra-ui/textarea/dist/chakra-ui-textarea.esm.js","Components/TextFieldQuestion.tsx","Hooks/UseThoughtRecord.tsx","../node_modules/@chakra-ui/form-control/dist/chakra-ui-form-control.esm.js"],"sourcesContent":["import { useFormControl } from '@chakra-ui/form-control';\nimport { forwardRef, useStyleConfig, omitThemingProps, chakra } from '@chakra-ui/system';\nimport { omit, cx, __DEV__ } from '@chakra-ui/utils';\nimport * as React from 'react';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar _excluded = [\"className\", \"rows\"];\n\n/**\n * Textarea is used to enter an amount of text that's longer than a single line\n * @see Docs https://chakra-ui.com/textarea\n */\nvar Textarea = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useStyleConfig(\"Textarea\", props);\n\n  var _omitThemingProps = omitThemingProps(props),\n      className = _omitThemingProps.className,\n      rows = _omitThemingProps.rows,\n      rest = _objectWithoutPropertiesLoose(_omitThemingProps, _excluded);\n\n  var textareaProps = useFormControl(rest);\n  var omitted = [\"h\", \"minH\", \"height\", \"minHeight\"];\n  var textareaStyles = rows ? omit(styles, omitted) : styles;\n  return /*#__PURE__*/React.createElement(chakra.textarea, _extends({\n    ref: ref,\n    rows: rows\n  }, textareaProps, {\n    className: cx(\"chakra-textarea\", className),\n    __css: textareaStyles\n  }));\n});\n\nif (__DEV__) {\n  Textarea.displayName = \"Textarea\";\n}\n\nexport { Textarea };\n","\nimport useThoughtRecord, {ThoughtRecordState} from '../Hooks/UseThoughtRecord'\n\nimport {\n  Textarea,\n  Button,\n  VStack,\n} from '@chakra-ui/react'\nimport { useLocation } from \"react-router-dom\"\nimport { useState } from \"react\"\nimport UseThemeColors from '../Hooks/useThemeColors'\n\n\n\n\nconst TextFieldQuestion: React.FC = () => {\n  const {foregroundColor} = UseThemeColors()\n  const [fieldState, setFieldState] = useState<string>(\"\")\n  const [label, onSubmit] = useThoughtRecord({answer: fieldState})\n  \n  const onChange:  React.ChangeEventHandler<HTMLTextAreaElement> = (event) => {\n    setFieldState(event.target.value)\n  }\n  \n\n  \n\n  return (\n    \n    <>\n      \n      \n      <VStack \n        rounded={'3xl'} \n        w={\"full\"} minH={\"100%\"} \n        flexDirection='column' \n        \n        spacing={8}\n        justifyContent='center' \n        mx={2} \n        pb={6} \n        px={5} \n        pt={2} \n      >        \n        <Textarea \n          placeholder={\"We're testing right now\"} \n          onChange={onChange}\n          value={fieldState}\n          _placeholder={{color: 'blackAlpha.800', fontSize: \"3xl\"}}\n          p={4} \n          m={2}\n           \n          bg={foregroundColor} \n          h={'80%'}  \n          w={\"full\"}\n          rounded={\"xl\"} \n          size=\"lg\"\n        />\n        <Button onClick={onSubmit} variant=\"submit\">Submit</Button> \n      </VStack>\n        \n      \n          \n      \n    </>\n      \n  );\n}\n\nexport default TextFieldQuestion\n","import { useEffect } from \"react\"\nimport { useLocation, useNavigate } from \"react-router-dom\"\nimport { Mood } from \"../Components/FeelingSlider\"\n\n\n\nconst question = [\n  \"/situationquestion\" ,\n  \"/mood\",\n  \"/thoughts\",\n  \"/evidencefor\",\n  \"/evidenceagainst\",\n  \"/alternativethought\",\n  \"/reratemood\",\n  \"/Submit\"\n] as const\n\nconst labels = {\n  \"/situationquestion\": \"What is the Situation?\",\n  \"/mood\": \"Add any emotions you felt and rate them\",\n  \"/thoughts\": \"List any thoughts and rate your Belief\",\n  \"/evidencefor\": \"What is the Evidence for\",\n  \"/evidenceagainst\": \"What is the Evidence Against\",\n  \"/alternativethought\": \"List any alternative thoughts and rate them\",\n  \"/reratemood\": \"rerate your moods\",\n  \"/Submit\": \"something\"\n} \n\nexport interface ThoughtRecordState {\n  moods?: Mood[],\n  hotThought?: string,\n  answer?: string\n\n}\n\nconst UseThoughtRecord= (recordState: ThoughtRecordState): [string,() => void] => {\n  const navigate = useNavigate()\n  const pathName = useLocation().pathname as typeof question[number]\n  console.log(pathName)\n  const label = labels[pathName]\n  console.log(label)\n  \n  useEffect(() => {\n    window.localStorage.setItem(pathName, JSON.stringify(recordState))\n    console.log(pathName,  window.localStorage.getItem(pathName))\n  },[recordState, pathName])\n  \n  const submitGenerator = () => {\n    const NextLinkIndex = question.indexOf(pathName) + 1\n    return () => navigate(question[NextLinkIndex])\n  }\n  \n  \n\n  \n\n  \n  return [label, submitGenerator()]\n}\n\nexport default UseThoughtRecord","import { useId, useBoolean } from '@chakra-ui/hooks';\nimport { forwardRef, useMultiStyleConfig, omitThemingProps, StylesProvider, chakra, useStyles, useStyleConfig } from '@chakra-ui/system';\nimport { cx, __DEV__, dataAttr, callAllHandlers, ariaAttr } from '@chakra-ui/utils';\nimport { createContext, mergeRefs } from '@chakra-ui/react-utils';\nimport * as React from 'react';\nimport Icon from '@chakra-ui/icon';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar _excluded$2 = [\"id\", \"isRequired\", \"isInvalid\", \"isDisabled\", \"isReadOnly\"],\n    _excluded2$1 = [\"getRootProps\", \"htmlProps\"];\n\nvar _createContext = createContext({\n  strict: false,\n  name: \"FormControlContext\"\n}),\n    FormControlProvider = _createContext[0],\n    useFormControlContext = _createContext[1];\n\nfunction useFormControlProvider(props) {\n  var idProp = props.id,\n      isRequired = props.isRequired,\n      isInvalid = props.isInvalid,\n      isDisabled = props.isDisabled,\n      isReadOnly = props.isReadOnly,\n      htmlProps = _objectWithoutPropertiesLoose(props, _excluded$2); // Generate all the required ids\n\n\n  var uuid = useId();\n  var id = idProp || \"field-\" + uuid;\n  var labelId = id + \"-label\";\n  var feedbackId = id + \"-feedback\";\n  var helpTextId = id + \"-helptext\";\n  /**\n   * Track whether the `FormErrorMessage` has been rendered.\n   * We use this to append its id the the `aria-describedby` of the `input`.\n   */\n\n  var _React$useState = React.useState(false),\n      hasFeedbackText = _React$useState[0],\n      setHasFeedbackText = _React$useState[1];\n  /**\n   * Track whether the `FormHelperText` has been rendered.\n   * We use this to append its id the the `aria-describedby` of the `input`.\n   */\n\n\n  var _React$useState2 = React.useState(false),\n      hasHelpText = _React$useState2[0],\n      setHasHelpText = _React$useState2[1]; // Track whether the form element (e.g, `input`) has focus.\n\n\n  var _useBoolean = useBoolean(),\n      isFocused = _useBoolean[0],\n      setFocus = _useBoolean[1];\n\n  var getHelpTextProps = React.useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    return _extends({\n      id: helpTextId\n    }, props, {\n      /**\n       * Notify the field context when the help text is rendered on screen,\n       * so we can apply the correct `aria-describedby` to the field (e.g. input, textarea).\n       */\n      ref: mergeRefs(forwardedRef, function (node) {\n        if (!node) return;\n        setHasHelpText(true);\n      })\n    });\n  }, [helpTextId]);\n  var getLabelProps = React.useCallback(function (props, forwardedRef) {\n    var _props$id, _props$htmlFor;\n\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    return _extends({}, props, {\n      ref: forwardedRef,\n      \"data-focus\": dataAttr(isFocused),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(isInvalid),\n      \"data-readonly\": dataAttr(isReadOnly),\n      id: (_props$id = props.id) != null ? _props$id : labelId,\n      htmlFor: (_props$htmlFor = props.htmlFor) != null ? _props$htmlFor : id\n    });\n  }, [id, isDisabled, isFocused, isInvalid, isReadOnly, labelId]);\n  var getErrorMessageProps = React.useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    return _extends({\n      id: feedbackId\n    }, props, {\n      /**\n       * Notify the field context when the error message is rendered on screen,\n       * so we can apply the correct `aria-describedby` to the field (e.g. input, textarea).\n       */\n      ref: mergeRefs(forwardedRef, function (node) {\n        if (!node) return;\n        setHasFeedbackText(true);\n      }),\n      \"aria-live\": \"polite\"\n    });\n  }, [feedbackId]);\n  var getRootProps = React.useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    return _extends({}, props, htmlProps, {\n      ref: forwardedRef,\n      role: \"group\"\n    });\n  }, [htmlProps]);\n  var getRequiredIndicatorProps = React.useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    return _extends({}, props, {\n      ref: forwardedRef,\n      role: \"presentation\",\n      \"aria-hidden\": true,\n      children: props.children || \"*\"\n    });\n  }, []);\n  return {\n    isRequired: !!isRequired,\n    isInvalid: !!isInvalid,\n    isReadOnly: !!isReadOnly,\n    isDisabled: !!isDisabled,\n    isFocused: !!isFocused,\n    onFocus: setFocus.on,\n    onBlur: setFocus.off,\n    hasFeedbackText: hasFeedbackText,\n    setHasFeedbackText: setHasFeedbackText,\n    hasHelpText: hasHelpText,\n    setHasHelpText: setHasHelpText,\n    id: id,\n    labelId: labelId,\n    feedbackId: feedbackId,\n    helpTextId: helpTextId,\n    htmlProps: htmlProps,\n    getHelpTextProps: getHelpTextProps,\n    getErrorMessageProps: getErrorMessageProps,\n    getRootProps: getRootProps,\n    getLabelProps: getLabelProps,\n    getRequiredIndicatorProps: getRequiredIndicatorProps\n  };\n}\n\n/**\n * FormControl provides context such as\n * `isInvalid`, `isDisabled`, and `isRequired` to form elements.\n *\n * This is commonly used in form elements such as `input`,\n * `select`, `textarea`, etc.\n */\nvar FormControl = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useMultiStyleConfig(\"Form\", props);\n  var ownProps = omitThemingProps(props);\n\n  var _useFormControlProvid = useFormControlProvider(ownProps),\n      getRootProps = _useFormControlProvid.getRootProps;\n      _useFormControlProvid.htmlProps;\n      var context = _objectWithoutPropertiesLoose(_useFormControlProvid, _excluded2$1);\n\n  var className = cx(\"chakra-form-control\", props.className);\n  return /*#__PURE__*/React.createElement(FormControlProvider, {\n    value: context\n  }, /*#__PURE__*/React.createElement(StylesProvider, {\n    value: styles\n  }, /*#__PURE__*/React.createElement(chakra.div, _extends({}, getRootProps({}, ref), {\n    className: className,\n    __css: styles[\"container\"]\n  }))));\n});\n\nif (__DEV__) {\n  FormControl.displayName = \"FormControl\";\n}\n\n/**\n * FormHelperText\n *\n * Assistive component that conveys additional guidance\n * about the field, such as how it will be used and what\n * types in values should be provided.\n */\nvar FormHelperText = /*#__PURE__*/forwardRef(function (props, ref) {\n  var field = useFormControlContext();\n  var styles = useStyles();\n  var className = cx(\"chakra-form__helper-text\", props.className);\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({}, field == null ? void 0 : field.getHelpTextProps(props, ref), {\n    __css: styles.helperText,\n    className: className\n  }));\n});\n\nif (__DEV__) {\n  FormHelperText.displayName = \"FormHelperText\";\n}\n\nvar _excluded$1 = [\"isDisabled\", \"isInvalid\", \"isReadOnly\", \"isRequired\"],\n    _excluded2 = [\"id\", \"disabled\", \"readOnly\", \"required\", \"isRequired\", \"isInvalid\", \"isReadOnly\", \"isDisabled\", \"onFocus\", \"onBlur\"];\n\n/**\n * React hook that provides the props that should be spread on to\n * input fields (`input`, `select`, `textarea`, etc.).\n *\n * It provides a convenient way to control a form fields, validation\n * and helper text.\n *\n * @internal\n */\nfunction useFormControl(props) {\n  var _useFormControlProps = useFormControlProps(props),\n      isDisabled = _useFormControlProps.isDisabled,\n      isInvalid = _useFormControlProps.isInvalid,\n      isReadOnly = _useFormControlProps.isReadOnly,\n      isRequired = _useFormControlProps.isRequired,\n      rest = _objectWithoutPropertiesLoose(_useFormControlProps, _excluded$1);\n\n  return _extends({}, rest, {\n    disabled: isDisabled,\n    readOnly: isReadOnly,\n    required: isRequired,\n    \"aria-invalid\": ariaAttr(isInvalid),\n    \"aria-required\": ariaAttr(isRequired),\n    \"aria-readonly\": ariaAttr(isReadOnly)\n  });\n}\n/**\n * @internal\n */\n\nfunction useFormControlProps(props) {\n  var _ref, _ref2, _ref3;\n\n  var field = useFormControlContext();\n\n  var id = props.id,\n      disabled = props.disabled,\n      readOnly = props.readOnly,\n      required = props.required,\n      isRequired = props.isRequired,\n      isInvalid = props.isInvalid,\n      isReadOnly = props.isReadOnly,\n      isDisabled = props.isDisabled,\n      onFocus = props.onFocus,\n      onBlur = props.onBlur,\n      rest = _objectWithoutPropertiesLoose(props, _excluded2);\n\n  var labelIds = props[\"aria-describedby\"] ? [props[\"aria-describedby\"]] : []; // Error message must be described first in all scenarios.\n\n  if (field != null && field.hasFeedbackText && field != null && field.isInvalid) {\n    labelIds.push(field.feedbackId);\n  }\n\n  if (field != null && field.hasHelpText) {\n    labelIds.push(field.helpTextId);\n  }\n\n  return _extends({}, rest, {\n    \"aria-describedby\": labelIds.join(\" \") || undefined,\n    id: id != null ? id : field == null ? void 0 : field.id,\n    isDisabled: (_ref = disabled != null ? disabled : isDisabled) != null ? _ref : field == null ? void 0 : field.isDisabled,\n    isReadOnly: (_ref2 = readOnly != null ? readOnly : isReadOnly) != null ? _ref2 : field == null ? void 0 : field.isReadOnly,\n    isRequired: (_ref3 = required != null ? required : isRequired) != null ? _ref3 : field == null ? void 0 : field.isRequired,\n    isInvalid: isInvalid != null ? isInvalid : field == null ? void 0 : field.isInvalid,\n    onFocus: callAllHandlers(field == null ? void 0 : field.onFocus, onFocus),\n    onBlur: callAllHandlers(field == null ? void 0 : field.onBlur, onBlur)\n  });\n}\n\n/**\n * Used to provide feedback about an invalid input,\n * and suggest clear instructions on how to fix it.\n */\nvar FormErrorMessage = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useMultiStyleConfig(\"FormError\", props);\n  var ownProps = omitThemingProps(props);\n  var field = useFormControlContext();\n  if (!(field != null && field.isInvalid)) return null;\n  return /*#__PURE__*/React.createElement(StylesProvider, {\n    value: styles\n  }, /*#__PURE__*/React.createElement(chakra.div, _extends({}, field == null ? void 0 : field.getErrorMessageProps(ownProps, ref), {\n    className: cx(\"chakra-form__error-message\", props.className),\n    __css: _extends({\n      display: \"flex\",\n      alignItems: \"center\"\n    }, styles.text)\n  })));\n});\n\nif (__DEV__) {\n  FormErrorMessage.displayName = \"FormErrorMessage\";\n}\n/**\n * Used as the visual indicator that a field is invalid or\n * a field has incorrect values.\n */\n\n\nvar FormErrorIcon = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useStyles();\n  var field = useFormControlContext();\n  if (!(field != null && field.isInvalid)) return null;\n\n  var _className = cx(\"chakra-form__error-icon\", props.className);\n\n  return /*#__PURE__*/React.createElement(Icon, _extends({\n    ref: ref,\n    \"aria-hidden\": true\n  }, props, {\n    __css: styles.icon,\n    className: _className\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M11.983,0a12.206,12.206,0,0,0-8.51,3.653A11.8,11.8,0,0,0,0,12.207,11.779,11.779,0,0,0,11.8,24h.214A12.111,12.111,0,0,0,24,11.791h0A11.766,11.766,0,0,0,11.983,0ZM10.5,16.542a1.476,1.476,0,0,1,1.449-1.53h.027a1.527,1.527,0,0,1,1.523,1.47,1.475,1.475,0,0,1-1.449,1.53h-.027A1.529,1.529,0,0,1,10.5,16.542ZM11,12.5v-6a1,1,0,0,1,2,0v6a1,1,0,1,1-2,0Z\"\n  }));\n});\n\nif (__DEV__) {\n  FormErrorIcon.displayName = \"FormErrorIcon\";\n}\n\nvar _excluded = [\"className\", \"children\", \"requiredIndicator\"];\n\n/**\n * Used to enhance the usability of form controls.\n *\n * It is used to inform users as to what information\n * is requested for a form field.\n *\n * ♿️ Accessibility: Every form field should have a form label.\n */\nvar FormLabel = /*#__PURE__*/forwardRef(function (passedProps, ref) {\n  var _field$getLabelProps;\n\n  var styles = useStyleConfig(\"FormLabel\", passedProps);\n  var props = omitThemingProps(passedProps);\n\n  props.className;\n      var children = props.children,\n      _props$requiredIndica = props.requiredIndicator,\n      requiredIndicator = _props$requiredIndica === void 0 ? /*#__PURE__*/React.createElement(RequiredIndicator, null) : _props$requiredIndica,\n      rest = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var field = useFormControlContext();\n  var ownProps = (_field$getLabelProps = field == null ? void 0 : field.getLabelProps(rest, ref)) != null ? _field$getLabelProps : _extends({\n    ref: ref\n  }, rest);\n  return /*#__PURE__*/React.createElement(chakra.label, _extends({}, ownProps, {\n    className: cx(\"chakra-form__label\", props.className),\n    __css: _extends({\n      display: \"block\",\n      textAlign: \"start\"\n    }, styles)\n  }), children, field != null && field.isRequired ? requiredIndicator : null);\n});\n\nif (__DEV__) {\n  FormLabel.displayName = \"FormLabel\";\n}\n\n/**\n * Used to show a \"required\" text or an asterisks (*) to indicate that\n * a field is required.\n */\nvar RequiredIndicator = /*#__PURE__*/forwardRef(function (props, ref) {\n  var field = useFormControlContext();\n  var styles = useStyles();\n  if (!(field != null && field.isRequired)) return null;\n  var className = cx(\"chakra-form__required-indicator\", props.className);\n  return /*#__PURE__*/React.createElement(chakra.span, _extends({}, field == null ? void 0 : field.getRequiredIndicatorProps(props, ref), {\n    __css: styles.requiredIndicator,\n    className: className\n  }));\n});\n\nif (__DEV__) {\n  RequiredIndicator.displayName = \"RequiredIndicator\";\n}\n\nexport { FormControl, FormErrorIcon, FormErrorMessage, FormHelperText, FormLabel, RequiredIndicator, useFormControl, useFormControlContext, useFormControlProps };\n"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_excluded","Textarea","forwardRef","props","ref","styles","useStyleConfig","_omitThemingProps","omitThemingProps","className","rows","rest","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","textareaProps","useFormControl","textareaStyles","omit","React","chakra","cx","__css","__DEV__","displayName","foregroundColor","UseThemeColors","useState","fieldState","setFieldState","useThoughtRecord","answer","onSubmit","rounded","w","minH","flexDirection","spacing","justifyContent","mx","pb","px","pt","placeholder","onChange","event","value","_placeholder","color","fontSize","p","m","bg","h","size","onClick","variant","question","labels","recordState","navigate","useNavigate","pathName","useLocation","pathname","console","log","label","useEffect","window","localStorage","setItem","JSON","stringify","getItem","NextLinkIndex","submitGenerator","_excluded$2","_excluded2$1","_createContext","createContext","strict","name","FormControlProvider","useFormControlContext","FormControl","useMultiStyleConfig","_useFormControlProvid","idProp","id","isRequired","isInvalid","isDisabled","isReadOnly","htmlProps","uuid","useId","labelId","feedbackId","helpTextId","_React$useState","hasFeedbackText","setHasFeedbackText","_React$useState2","hasHelpText","setHasHelpText","_useBoolean","useBoolean","isFocused","setFocus","getHelpTextProps","forwardedRef","mergeRefs","node","getLabelProps","_props$id","_props$htmlFor","dataAttr","htmlFor","getErrorMessageProps","getRootProps","role","getRequiredIndicatorProps","children","onFocus","on","onBlur","off","useFormControlProvider","context","StylesProvider","FormHelperText","field","useStyles","helperText","_excluded$1","_excluded2","_useFormControlProps","_ref","_ref2","_ref3","disabled","readOnly","required","labelIds","push","join","undefined","callAllHandlers","useFormControlProps","ariaAttr","FormErrorMessage","ownProps","display","alignItems","text","FormErrorIcon","_className","Icon","icon","fill","d","FormLabel","passedProps","_field$getLabelProps","_props$requiredIndica","requiredIndicator","RequiredIndicator","textAlign"],"sourceRoot":""}