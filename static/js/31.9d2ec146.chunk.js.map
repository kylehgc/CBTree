{"version":3,"file":"static/js/31.9d2ec146.chunk.js","mappings":"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","sources":["Components/Signup.tsx","Components/UserPassFormElements.tsx"],"sourcesContent":["import {\n\tBox,\n\tFormControl,\n\tFormLabel,\n\tInput,\n\tHStack,\n\tStack,\n\tButton,\n\tHeading,\n\tText,\n\tLink,\n\tuseToast,\n\tFormErrorMessage,\n} from '@chakra-ui/react'\n\nimport {\n\tLink as ReactRouterLink,\n\tuseLocation,\n\tuseNavigate,\n} from 'react-router-dom'\nimport { useEffect } from 'react'\nimport { signupEndPoint } from '../utils/api'\nimport { useForm, SubmitHandler } from 'react-hook-form'\nimport UserPassFormElements from './UserPassFormElements'\nimport useThemeColors from '../Hooks/useThemeColors'\nimport useAuth from '../Hooks/useAuth'\n\ninterface FormValues {\n\tfirstName?: string\n\tlastName?: string\n\tusername: string\n\tpassword: string\n}\ntype LocationState = {\n\tstate: {\n\t\tpath?: string\n\t}\n}\nexport default function SignupCard() {\n\tconst { foregroundColor, backgroundColor } = useThemeColors()\n\tconst toast = useToast()\n\tconst {\n\t\tregister,\n\t\thandleSubmit,\n\t\tformState: { errors, isSubmitting },\n\t} = useForm<FormValues>()\n\tconst { login, currentUser } = useAuth()\n\tconst navigate = useNavigate()\n\tconst { state } = useLocation() as LocationState\n\n\tuseEffect(() => {\n\t\tif (currentUser) {\n\t\t\tnavigate(state?.path || '/emotion')\n\t\t}\n\t}, [currentUser, navigate, state?.path])\n\tconst onSubmit: SubmitHandler<FormValues> = async (value) => {\n\t\ttry {\n\t\t\tconst response = await fetch(signupEndPoint, {\n\t\t\t\tbody: JSON.stringify(value),\n\t\t\t\tmethod: 'POST',\n\t\t\t\tmode: 'cors',\n\t\t\t\theaders: {\n\t\t\t\t\tAccept: 'application/json',\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t},\n\t\t\t})\n\t\t\tif (response.ok) {\n\t\t\t\tconst token = await response.json()\n\t\t\t\tlogin(token)\n\t\t\t\tnavigate('/emotion')\n\t\t\t} else {\n\t\t\t\tif (response.status === 400) {\n\t\t\t\t\ttoast({\n\t\t\t\t\t\tstatus: 'warning',\n\t\t\t\t\t\tdescription: 'UserName Already Taken',\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t} catch {\n\t\t\ttoast({\n\t\t\t\tstatus: 'error',\n\t\t\t\tdescription: 'Network Error Try Again',\n\t\t\t})\n\t\t}\n\t}\n\treturn (\n\t\t<Stack spacing={8} height={'100%'} mx={'auto'} maxW={'lg'} py={12} px={6}>\n\t\t\t<Stack align={'center'}>\n\t\t\t\t<Heading fontSize={'4xl'} textAlign={'center'}>\n\t\t\t\t\tSign up\n\t\t\t\t</Heading>\n\t\t\t</Stack>\n\t\t\t<Box rounded={'lg'} bg={foregroundColor} boxShadow={'lg'} p={8}>\n\t\t\t\t<form onSubmit={handleSubmit(onSubmit)}>\n\t\t\t\t\t<Stack spacing={4}>\n\t\t\t\t\t\t<HStack>\n\t\t\t\t\t\t\t<Box>\n\t\t\t\t\t\t\t\t<FormControl isInvalid={!!errors?.firstName?.message}>\n\t\t\t\t\t\t\t\t\t<FormLabel>First Name</FormLabel>\n\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t{...register('firstName', {\n\t\t\t\t\t\t\t\t\t\t\tmaxLength: {\n\t\t\t\t\t\t\t\t\t\t\t\tvalue: 20,\n\t\t\t\t\t\t\t\t\t\t\t\tmessage: 'Your name is too long',\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\tminLength: {\n\t\t\t\t\t\t\t\t\t\t\t\tvalue: 2,\n\t\t\t\t\t\t\t\t\t\t\t\tmessage: 'Your name is too short',\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<FormErrorMessage>\n\t\t\t\t\t\t\t\t\t\t{errors?.firstName?.message}\n\t\t\t\t\t\t\t\t\t</FormErrorMessage>\n\t\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t<Box>\n\t\t\t\t\t\t\t\t<FormControl isInvalid={!!errors?.lastName?.message}>\n\t\t\t\t\t\t\t\t\t<FormLabel>Last Name</FormLabel>\n\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t{...register('lastName', {\n\t\t\t\t\t\t\t\t\t\t\tmaxLength: {\n\t\t\t\t\t\t\t\t\t\t\t\tvalue: 20,\n\t\t\t\t\t\t\t\t\t\t\t\tmessage: 'Your name is too long',\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\tminLength: {\n\t\t\t\t\t\t\t\t\t\t\t\tvalue: 2,\n\t\t\t\t\t\t\t\t\t\t\t\tmessage: 'Your name is too short',\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<FormErrorMessage>\n\t\t\t\t\t\t\t\t\t\t{errors?.lastName?.message}\n\t\t\t\t\t\t\t\t\t</FormErrorMessage>\n\t\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t</HStack>\n\t\t\t\t\t\t<UserPassFormElements register={register} errors={errors} />\n\t\t\t\t\t\t<Stack spacing={10} pt={2}>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\tcolor=\"white\"\n\t\t\t\t\t\t\t\tisLoading={isSubmitting}\n\t\t\t\t\t\t\t\tloadingText=\"Submitting\"\n\t\t\t\t\t\t\t\tsize=\"lg\"\n\t\t\t\t\t\t\t\tbg={backgroundColor}\n\t\t\t\t\t\t\t\t_hover={{\n\t\t\t\t\t\t\t\t\tbg: 'blue.500',\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tSign up\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Stack>\n\t\t\t\t\t\t<Stack pt={6}>\n\t\t\t\t\t\t\t<Text align={'center'}>\n\t\t\t\t\t\t\t\tAlready a user?{' '}\n\t\t\t\t\t\t\t\t<Link as={ReactRouterLink} to={'/'} color={'blue.400'}>\n\t\t\t\t\t\t\t\t\tLogin\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t</Stack>\n\t\t\t\t\t</Stack>\n\t\t\t\t</form>\n\t\t\t</Box>\n\t\t</Stack>\n\t)\n}\n","import {\n\tFormControl,\n\tFormLabel,\n\tInput,\n\tFormErrorMessage,\n} from '@chakra-ui/react'\nimport { FieldError, UseFormRegister } from 'react-hook-form'\nimport React from 'react'\n\ninterface FormValues {\n\tusername: string\n\tpassword: string\n}\ninterface IProps {\n\terrors: Errors\n\tregister: UseFormRegister<FormValues>\n}\ninterface Errors {\n\tusername?: FieldError | undefined\n\tpassword?: FieldError | undefined\n}\n\nconst UserPassFormElements: React.FC<IProps> = ({\n\terrors,\n\tregister,\n}: IProps) => {\n\treturn (\n\t\t<>\n\t\t\t<FormControl isRequired isInvalid={!!errors?.username} id=\"email\">\n\t\t\t\t<FormLabel>Email address</FormLabel>\n\t\t\t\t<Input\n\t\t\t\t\t_hover={{ borderColor: 'gray.300' }}\n\t\t\t\t\tborderColor={'gray.300'}\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tplaceholder=\"Email\"\n\t\t\t\t\t{...register('username', {\n\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\tpattern: {\n\t\t\t\t\t\t\tvalue: /^\\S+@\\S+$/i,\n\t\t\t\t\t\t\tmessage: 'Not a valid email address',\n\t\t\t\t\t\t},\n\t\t\t\t\t})}\n\t\t\t\t/>\n\t\t\t\t<FormErrorMessage>{errors?.username?.message}</FormErrorMessage>\n\t\t\t</FormControl>\n\t\t\t<FormControl isInvalid={!!errors?.password?.message} id=\"password\">\n\t\t\t\t<FormLabel>Password</FormLabel>\n\t\t\t\t<Input\n\t\t\t\t\tborderColor={'gray.300'}\n\t\t\t\t\tcolor={'black'}\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tplaceholder=\"password\"\n\t\t\t\t\t{...register('password', {\n\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\tmaxLength: {\n\t\t\t\t\t\t\tvalue: 10,\n\t\t\t\t\t\t\tmessage: 'Your password is too long',\n\t\t\t\t\t\t},\n\t\t\t\t\t\tminLength: {\n\t\t\t\t\t\t\tvalue: 4,\n\t\t\t\t\t\t\tmessage: 'Your password is too short',\n\t\t\t\t\t\t},\n\t\t\t\t\t})}\n\t\t\t\t/>\n\t\t\t\t<FormErrorMessage>{errors?.password?.message}</FormErrorMessage>\n\t\t\t</FormControl>\n\t\t</>\n\t)\n}\n\nexport default UserPassFormElements\n"],"names":["SignupCard","useThemeColors","foregroundColor","backgroundColor","toast","useToast","useForm","register","handleSubmit","formState","errors","isSubmitting","useAuth","login","currentUser","navigate","useNavigate","state","useLocation","useEffect","path","onSubmit","value","fetch","signupEndPoint","body","JSON","stringify","method","mode","headers","Accept","response","ok","json","token","status","description","spacing","height","mx","maxW","py","px","align","fontSize","textAlign","rounded","bg","boxShadow","p","isInvalid","firstName","message","type","maxLength","minLength","lastName","pt","color","isLoading","loadingText","size","_hover","as","ReactRouterLink","to","isRequired","username","id","borderColor","placeholder","required","pattern","password"],"sourceRoot":""}