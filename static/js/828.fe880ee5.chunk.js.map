{"version":3,"file":"static/js/828.fe880ee5.chunk.js","mappings":"uOAwEA,UAnEgC,WAC/B,IAAQA,GAAaC,EAAAA,EAAAA,MAAbD,SACR,GAAsCE,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAAwCF,EAAAA,EAAAA,WAAS,GAAjD,eAAOG,EAAP,KAAqBC,EAArB,KACMC,GAAQC,EAAAA,EAAAA,MACRC,GAAWC,EAAAA,EAAAA,MAEXC,EAAa,mCAAG,yFACjBR,EAAYS,OAAS,GADJ,uBAEpBN,GAAgB,GACVO,EAAuB,CAC5BC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAEC,SAAUf,IACjCgB,QAAS,CACR,eAAgB,mBAChBC,OAAQ,qBARU,SAWGC,MAAM,GAAD,OAAIC,EAAAA,GAAJ,kBAA0BtB,GAAYa,GAX9C,cAYPU,IACZhB,EAAM,CACLiB,OAAQ,UACRC,YAAa,uDAEdhB,EAAS,OAETF,EAAM,CAAEiB,OAAQ,QAASC,YAAa,sBACtCnB,GAAgB,IApBG,uBAuBpBC,EAAM,CAAEiB,OAAQ,UAAWC,YAAa,0BAvBpB,4CAAH,qDA+BnB,OACC,+BACC,UAAC,KAAD,CACCC,EAAG,EACHC,QAAS,EACTC,eAAgB,SAChBC,OAAQ,OACRC,QAAS,SALV,WAOC,SAAC,KAAD,oCACA,SAAC,KAAD,CACCC,MAAM,QACNC,MAAO7B,EACP8B,KAAK,WACLC,SAnB+D,SAClEC,GAEA/B,EAAe+B,EAAMC,OAAOJ,QAiBzBK,YAAY,kBAEb,SAAC,KAAD,CACCC,QAAQ,SACRC,UAAWlC,EACXmC,QAAS7B,EAHV","sources":["Components/Authorization/PasswordReset.tsx"],"sourcesContent":["import { Button, Heading, Input, useToast, VStack } from '@chakra-ui/react'\nimport { useState } from 'react'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport { userEndPoint } from '../../Utils/api'\n\nconst PasswordReset: React.FC = () => {\n\tconst { resetKey } = useParams()\n\tconst [newPassword, setNewPassword] = useState('')\n\tconst [isSubmitting, setIsSubmitting] = useState(false)\n\tconst toast = useToast()\n\tconst navigate = useNavigate()\n\n\tconst handleOnClick = async () => {\n\t\tif (newPassword.length > 3) {\n\t\t\tsetIsSubmitting(true)\n\t\t\tconst options: RequestInit = {\n\t\t\t\tmethod: 'POST',\n\t\t\t\tbody: JSON.stringify({ password: newPassword }),\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\tAccept: 'application/json',\n\t\t\t\t},\n\t\t\t}\n\t\t\tconst response = await fetch(`${userEndPoint}/reset/${resetKey}`, options)\n\t\t\tif (response.ok) {\n\t\t\t\ttoast({\n\t\t\t\t\tstatus: 'success',\n\t\t\t\t\tdescription: 'Password Successfully changed redirecting to login',\n\t\t\t\t})\n\t\t\t\tnavigate('/')\n\t\t\t} else {\n\t\t\t\ttoast({ status: 'error', description: 'reset has expired' })\n\t\t\t\tsetIsSubmitting(false)\n\t\t\t}\n\t\t} else {\n\t\t\ttoast({ status: 'warning', description: 'Password is too short' })\n\t\t}\n\t}\n\tconst handleOnChange: React.ChangeEventHandler<HTMLInputElement> = (\n\t\tevent,\n\t) => {\n\t\tsetNewPassword(event.target.value)\n\t}\n\treturn (\n\t\t<>\n\t\t\t<VStack\n\t\t\t\tp={2}\n\t\t\t\tspacing={8}\n\t\t\t\tjustifyContent={'center'}\n\t\t\t\theight={'60vh'}\n\t\t\t\tflexDir={'column'}\n\t\t\t>\n\t\t\t\t<Heading>Enter a new Password</Heading>\n\t\t\t\t<Input\n\t\t\t\t\tcolor=\"white\"\n\t\t\t\t\tvalue={newPassword}\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tonChange={handleOnChange}\n\t\t\t\t\tplaceholder=\"New Password\"\n\t\t\t\t/>\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"submit\"\n\t\t\t\t\tisLoading={isSubmitting}\n\t\t\t\t\tonClick={handleOnClick}\n\t\t\t\t>\n\t\t\t\t\tNew Password\n\t\t\t\t</Button>\n\t\t\t</VStack>\n\t\t</>\n\t)\n}\n\nexport default PasswordReset\n"],"names":["resetKey","useParams","useState","newPassword","setNewPassword","isSubmitting","setIsSubmitting","toast","useToast","navigate","useNavigate","handleOnClick","length","options","method","body","JSON","stringify","password","headers","Accept","fetch","userEndPoint","ok","status","description","p","spacing","justifyContent","height","flexDir","color","value","type","onChange","event","target","placeholder","variant","isLoading","onClick"],"sourceRoot":""}