{"version":3,"file":"static/js/764.c8559a2b.chunk.js","mappings":"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","sources":["../node_modules/@chakra-ui/textarea/dist/chakra-ui-textarea.esm.js","Components/TextFieldQuestion.tsx","../node_modules/@chakra-ui/form-control/dist/chakra-ui-form-control.esm.js"],"sourcesContent":["import { useFormControl } from '@chakra-ui/form-control';\nimport { forwardRef, useStyleConfig, omitThemingProps, chakra } from '@chakra-ui/system';\nimport { omit, cx, __DEV__ } from '@chakra-ui/utils';\nimport * as React from 'react';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar _excluded = [\"className\", \"rows\"];\n\n/**\n * Textarea is used to enter an amount of text that's longer than a single line\n * @see Docs https://chakra-ui.com/textarea\n */\nvar Textarea = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useStyleConfig(\"Textarea\", props);\n\n  var _omitThemingProps = omitThemingProps(props),\n      className = _omitThemingProps.className,\n      rows = _omitThemingProps.rows,\n      rest = _objectWithoutPropertiesLoose(_omitThemingProps, _excluded);\n\n  var textareaProps = useFormControl(rest);\n  var omitted = [\"h\", \"minH\", \"height\", \"minHeight\"];\n  var textareaStyles = rows ? omit(styles, omitted) : styles;\n  return /*#__PURE__*/React.createElement(chakra.textarea, _extends({\n    ref: ref,\n    rows: rows\n  }, textareaProps, {\n    className: cx(\"chakra-textarea\", className),\n    __css: textareaStyles\n  }));\n});\n\nif (__DEV__) {\n  Textarea.displayName = \"Textarea\";\n}\n\nexport { Textarea };\n","import useThoughtRecord from '../Hooks/UseThoughtRecord'\n\nimport {\n\tTextarea,\n\tButton,\n\tVStack,\n\tSlideFade,\n\tuseColorModeValue,\n} from '@chakra-ui/react'\n\nimport { useEffect, useState } from 'react'\nimport UseThemeColors from '../Hooks/useThemeColors'\nimport { isKeyOfThoughtRecord } from './types'\nimport LoadingTextField from './LoadingTextField'\n\nconst TextFieldQuestion: React.FC = () => {\n\tconst placeholderColor = useColorModeValue('black', 'white')\n\tconst { foregroundColor } = UseThemeColors()\n\tconst [fieldState, setFieldState] = useState<string>('')\n\tconst {\n\t\tlabel,\n\t\tonSubmit,\n\t\tisSubmitting,\n\t\tthoughtRecord,\n\t\tcurrentQuestion,\n\t\tisValidQuestion,\n\t} = useThoughtRecord()\n\n\tuseEffect(() => {\n\t\tif (thoughtRecord) {\n\t\t\tif (isKeyOfThoughtRecord(currentQuestion, thoughtRecord)) {\n\t\t\t\tconst value = thoughtRecord[currentQuestion]\n\t\t\t\tif (typeof value === 'string') {\n\t\t\t\t\tsetFieldState(value)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}, [currentQuestion, thoughtRecord])\n\n\tconst onChange: React.ChangeEventHandler<HTMLTextAreaElement> = (event) => {\n\t\tsetFieldState(event.target.value)\n\t}\n\tif (!thoughtRecord || !isValidQuestion) {\n\t\treturn <LoadingTextField />\n\t}\n\treturn (\n\t\t<VStack\n\t\t\tspacing={2}\n\t\t\trounded={'3xl'}\n\t\t\tw={'full'}\n\t\t\th={'70vh'}\n\t\t\tflexDirection=\"column\"\n\t\t\tmt={6}\n\t\t\talignContent=\"center\"\n\t\t\tjustifyContent=\"center\"\n\t\t\tmx={2}\n\t\t\tpx={5}\n\t\t\tpy={0}\n\t\t>\n\t\t\t<SlideFade\n\t\t\t\toffsetY={0}\n\t\t\t\toffsetX={'50%'}\n\t\t\t\ttransition={{\n\t\t\t\t\tenter: { duration: 0.2 },\n\t\t\t\t\texit: { delay: 0.7, duration: 0.3 },\n\t\t\t\t}}\n\t\t\t\tstyle={{\n\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\tflexDirection: 'column',\n\t\t\t\t\theight: '70vh',\n\t\t\t\t\twidth: '100%',\n\t\t\t\t}}\n\t\t\t\tin={!isSubmitting}\n\t\t\t>\n\t\t\t\t<Textarea\n\t\t\t\t\tplaceholder={label}\n\t\t\t\t\tonChange={onChange}\n\t\t\t\t\tvalue={fieldState}\n\t\t\t\t\t_placeholder={{\n\t\t\t\t\t\tcolor: placeholderColor,\n\t\t\t\t\t\tfontSize: '3xl',\n\t\t\t\t\t}}\n\t\t\t\t\tp={4}\n\t\t\t\t\tbg={foregroundColor}\n\t\t\t\t\th={'90%'}\n\t\t\t\t\tw={'full'}\n\t\t\t\t\trounded={'xl'}\n\t\t\t\t\tsize=\"lg\"\n\t\t\t\t/>\n\t\t\t</SlideFade>\n\t\t\t<SlideFade\n\t\t\t\tin={!isSubmitting}\n\t\t\t\toffsetY={0}\n\t\t\t\ttransition={{\n\t\t\t\t\tenter: { delay: 0.2, duration: 0.4 },\n\t\t\t\t\texit: { delay: 0.3, duration: 0.3 },\n\t\t\t\t}}\n\t\t\t\toffsetX={'100px'}\n\t\t\t\tstyle={{\n\t\t\t\t\tflexDirection: 'column',\n\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\theight: '10%',\n\t\t\t\t\twidth: '100%',\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Button\n\t\t\t\t\tvariant={'submit'}\n\t\t\t\t\tdisabled={fieldState.length < 1}\n\t\t\t\t\talignSelf={'center'}\n\t\t\t\t\tisLoading={isSubmitting}\n\t\t\t\t\tloadingText={'Submitting'}\n\t\t\t\t\tonClick={() => onSubmit(fieldState)}\n\t\t\t\t>\n\t\t\t\t\tSubmit\n\t\t\t\t</Button>\n\t\t\t</SlideFade>\n\t\t</VStack>\n\t)\n}\n\nexport default TextFieldQuestion\n","import { useId, useBoolean } from '@chakra-ui/hooks';\nimport { forwardRef, useMultiStyleConfig, omitThemingProps, StylesProvider, chakra, useStyles, useStyleConfig } from '@chakra-ui/system';\nimport { cx, __DEV__, dataAttr, callAllHandlers, ariaAttr } from '@chakra-ui/utils';\nimport { createContext, mergeRefs } from '@chakra-ui/react-utils';\nimport * as React from 'react';\nimport Icon from '@chakra-ui/icon';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar _excluded$2 = [\"id\", \"isRequired\", \"isInvalid\", \"isDisabled\", \"isReadOnly\"],\n    _excluded2$1 = [\"getRootProps\", \"htmlProps\"];\n\nvar _createContext = createContext({\n  strict: false,\n  name: \"FormControlContext\"\n}),\n    FormControlProvider = _createContext[0],\n    useFormControlContext = _createContext[1];\n\nfunction useFormControlProvider(props) {\n  var idProp = props.id,\n      isRequired = props.isRequired,\n      isInvalid = props.isInvalid,\n      isDisabled = props.isDisabled,\n      isReadOnly = props.isReadOnly,\n      htmlProps = _objectWithoutPropertiesLoose(props, _excluded$2); // Generate all the required ids\n\n\n  var uuid = useId();\n  var id = idProp || \"field-\" + uuid;\n  var labelId = id + \"-label\";\n  var feedbackId = id + \"-feedback\";\n  var helpTextId = id + \"-helptext\";\n  /**\n   * Track whether the `FormErrorMessage` has been rendered.\n   * We use this to append its id the `aria-describedby` of the `input`.\n   */\n\n  var _React$useState = React.useState(false),\n      hasFeedbackText = _React$useState[0],\n      setHasFeedbackText = _React$useState[1];\n  /**\n   * Track whether the `FormHelperText` has been rendered.\n   * We use this to append its id the `aria-describedby` of the `input`.\n   */\n\n\n  var _React$useState2 = React.useState(false),\n      hasHelpText = _React$useState2[0],\n      setHasHelpText = _React$useState2[1]; // Track whether the form element (e.g, `input`) has focus.\n\n\n  var _useBoolean = useBoolean(),\n      isFocused = _useBoolean[0],\n      setFocus = _useBoolean[1];\n\n  var getHelpTextProps = React.useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    return _extends({\n      id: helpTextId\n    }, props, {\n      /**\n       * Notify the field context when the help text is rendered on screen,\n       * so we can apply the correct `aria-describedby` to the field (e.g. input, textarea).\n       */\n      ref: mergeRefs(forwardedRef, function (node) {\n        if (!node) return;\n        setHasHelpText(true);\n      })\n    });\n  }, [helpTextId]);\n  var getLabelProps = React.useCallback(function (props, forwardedRef) {\n    var _props$id, _props$htmlFor;\n\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    return _extends({}, props, {\n      ref: forwardedRef,\n      \"data-focus\": dataAttr(isFocused),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(isInvalid),\n      \"data-readonly\": dataAttr(isReadOnly),\n      id: (_props$id = props.id) != null ? _props$id : labelId,\n      htmlFor: (_props$htmlFor = props.htmlFor) != null ? _props$htmlFor : id\n    });\n  }, [id, isDisabled, isFocused, isInvalid, isReadOnly, labelId]);\n  var getErrorMessageProps = React.useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    return _extends({\n      id: feedbackId\n    }, props, {\n      /**\n       * Notify the field context when the error message is rendered on screen,\n       * so we can apply the correct `aria-describedby` to the field (e.g. input, textarea).\n       */\n      ref: mergeRefs(forwardedRef, function (node) {\n        if (!node) return;\n        setHasFeedbackText(true);\n      }),\n      \"aria-live\": \"polite\"\n    });\n  }, [feedbackId]);\n  var getRootProps = React.useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    return _extends({}, props, htmlProps, {\n      ref: forwardedRef,\n      role: \"group\"\n    });\n  }, [htmlProps]);\n  var getRequiredIndicatorProps = React.useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    return _extends({}, props, {\n      ref: forwardedRef,\n      role: \"presentation\",\n      \"aria-hidden\": true,\n      children: props.children || \"*\"\n    });\n  }, []);\n  return {\n    isRequired: !!isRequired,\n    isInvalid: !!isInvalid,\n    isReadOnly: !!isReadOnly,\n    isDisabled: !!isDisabled,\n    isFocused: !!isFocused,\n    onFocus: setFocus.on,\n    onBlur: setFocus.off,\n    hasFeedbackText: hasFeedbackText,\n    setHasFeedbackText: setHasFeedbackText,\n    hasHelpText: hasHelpText,\n    setHasHelpText: setHasHelpText,\n    id: id,\n    labelId: labelId,\n    feedbackId: feedbackId,\n    helpTextId: helpTextId,\n    htmlProps: htmlProps,\n    getHelpTextProps: getHelpTextProps,\n    getErrorMessageProps: getErrorMessageProps,\n    getRootProps: getRootProps,\n    getLabelProps: getLabelProps,\n    getRequiredIndicatorProps: getRequiredIndicatorProps\n  };\n}\n\n/**\n * FormControl provides context such as\n * `isInvalid`, `isDisabled`, and `isRequired` to form elements.\n *\n * This is commonly used in form elements such as `input`,\n * `select`, `textarea`, etc.\n */\nvar FormControl = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useMultiStyleConfig(\"Form\", props);\n  var ownProps = omitThemingProps(props);\n\n  var _useFormControlProvid = useFormControlProvider(ownProps),\n      getRootProps = _useFormControlProvid.getRootProps;\n      _useFormControlProvid.htmlProps;\n      var context = _objectWithoutPropertiesLoose(_useFormControlProvid, _excluded2$1);\n\n  var className = cx(\"chakra-form-control\", props.className);\n  return /*#__PURE__*/React.createElement(FormControlProvider, {\n    value: context\n  }, /*#__PURE__*/React.createElement(StylesProvider, {\n    value: styles\n  }, /*#__PURE__*/React.createElement(chakra.div, _extends({}, getRootProps({}, ref), {\n    className: className,\n    __css: styles[\"container\"]\n  }))));\n});\n\nif (__DEV__) {\n  FormControl.displayName = \"FormControl\";\n}\n\n/**\n * FormHelperText\n *\n * Assistive component that conveys additional guidance\n * about the field, such as how it will be used and what\n * types in values should be provided.\n */\nvar FormHelperText = /*#__PURE__*/forwardRef(function (props, ref) {\n  var field = useFormControlContext();\n  var styles = useStyles();\n  var className = cx(\"chakra-form__helper-text\", props.className);\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({}, field == null ? void 0 : field.getHelpTextProps(props, ref), {\n    __css: styles.helperText,\n    className: className\n  }));\n});\n\nif (__DEV__) {\n  FormHelperText.displayName = \"FormHelperText\";\n}\n\nvar _excluded$1 = [\"isDisabled\", \"isInvalid\", \"isReadOnly\", \"isRequired\"],\n    _excluded2 = [\"id\", \"disabled\", \"readOnly\", \"required\", \"isRequired\", \"isInvalid\", \"isReadOnly\", \"isDisabled\", \"onFocus\", \"onBlur\"];\n\n/**\n * React hook that provides the props that should be spread on to\n * input fields (`input`, `select`, `textarea`, etc.).\n *\n * It provides a convenient way to control a form fields, validation\n * and helper text.\n *\n * @internal\n */\nfunction useFormControl(props) {\n  var _useFormControlProps = useFormControlProps(props),\n      isDisabled = _useFormControlProps.isDisabled,\n      isInvalid = _useFormControlProps.isInvalid,\n      isReadOnly = _useFormControlProps.isReadOnly,\n      isRequired = _useFormControlProps.isRequired,\n      rest = _objectWithoutPropertiesLoose(_useFormControlProps, _excluded$1);\n\n  return _extends({}, rest, {\n    disabled: isDisabled,\n    readOnly: isReadOnly,\n    required: isRequired,\n    \"aria-invalid\": ariaAttr(isInvalid),\n    \"aria-required\": ariaAttr(isRequired),\n    \"aria-readonly\": ariaAttr(isReadOnly)\n  });\n}\n/**\n * @internal\n */\n\nfunction useFormControlProps(props) {\n  var _ref, _ref2, _ref3;\n\n  var field = useFormControlContext();\n\n  var id = props.id,\n      disabled = props.disabled,\n      readOnly = props.readOnly,\n      required = props.required,\n      isRequired = props.isRequired,\n      isInvalid = props.isInvalid,\n      isReadOnly = props.isReadOnly,\n      isDisabled = props.isDisabled,\n      onFocus = props.onFocus,\n      onBlur = props.onBlur,\n      rest = _objectWithoutPropertiesLoose(props, _excluded2);\n\n  var labelIds = props[\"aria-describedby\"] ? [props[\"aria-describedby\"]] : []; // Error message must be described first in all scenarios.\n\n  if (field != null && field.hasFeedbackText && field != null && field.isInvalid) {\n    labelIds.push(field.feedbackId);\n  }\n\n  if (field != null && field.hasHelpText) {\n    labelIds.push(field.helpTextId);\n  }\n\n  return _extends({}, rest, {\n    \"aria-describedby\": labelIds.join(\" \") || undefined,\n    id: id != null ? id : field == null ? void 0 : field.id,\n    isDisabled: (_ref = disabled != null ? disabled : isDisabled) != null ? _ref : field == null ? void 0 : field.isDisabled,\n    isReadOnly: (_ref2 = readOnly != null ? readOnly : isReadOnly) != null ? _ref2 : field == null ? void 0 : field.isReadOnly,\n    isRequired: (_ref3 = required != null ? required : isRequired) != null ? _ref3 : field == null ? void 0 : field.isRequired,\n    isInvalid: isInvalid != null ? isInvalid : field == null ? void 0 : field.isInvalid,\n    onFocus: callAllHandlers(field == null ? void 0 : field.onFocus, onFocus),\n    onBlur: callAllHandlers(field == null ? void 0 : field.onBlur, onBlur)\n  });\n}\n\n/**\n * Used to provide feedback about an invalid input,\n * and suggest clear instructions on how to fix it.\n */\nvar FormErrorMessage = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useMultiStyleConfig(\"FormError\", props);\n  var ownProps = omitThemingProps(props);\n  var field = useFormControlContext();\n  if (!(field != null && field.isInvalid)) return null;\n  return /*#__PURE__*/React.createElement(StylesProvider, {\n    value: styles\n  }, /*#__PURE__*/React.createElement(chakra.div, _extends({}, field == null ? void 0 : field.getErrorMessageProps(ownProps, ref), {\n    className: cx(\"chakra-form__error-message\", props.className),\n    __css: _extends({\n      display: \"flex\",\n      alignItems: \"center\"\n    }, styles.text)\n  })));\n});\n\nif (__DEV__) {\n  FormErrorMessage.displayName = \"FormErrorMessage\";\n}\n/**\n * Used as the visual indicator that a field is invalid or\n * a field has incorrect values.\n */\n\n\nvar FormErrorIcon = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useStyles();\n  var field = useFormControlContext();\n  if (!(field != null && field.isInvalid)) return null;\n\n  var _className = cx(\"chakra-form__error-icon\", props.className);\n\n  return /*#__PURE__*/React.createElement(Icon, _extends({\n    ref: ref,\n    \"aria-hidden\": true\n  }, props, {\n    __css: styles.icon,\n    className: _className\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M11.983,0a12.206,12.206,0,0,0-8.51,3.653A11.8,11.8,0,0,0,0,12.207,11.779,11.779,0,0,0,11.8,24h.214A12.111,12.111,0,0,0,24,11.791h0A11.766,11.766,0,0,0,11.983,0ZM10.5,16.542a1.476,1.476,0,0,1,1.449-1.53h.027a1.527,1.527,0,0,1,1.523,1.47,1.475,1.475,0,0,1-1.449,1.53h-.027A1.529,1.529,0,0,1,10.5,16.542ZM11,12.5v-6a1,1,0,0,1,2,0v6a1,1,0,1,1-2,0Z\"\n  }));\n});\n\nif (__DEV__) {\n  FormErrorIcon.displayName = \"FormErrorIcon\";\n}\n\nvar _excluded = [\"className\", \"children\", \"requiredIndicator\", \"optionalIndicator\"];\n\n/**\n * Used to enhance the usability of form controls.\n *\n * It is used to inform users as to what information\n * is requested for a form field.\n *\n * ♿️ Accessibility: Every form field should have a form label.\n */\nvar FormLabel = /*#__PURE__*/forwardRef(function (passedProps, ref) {\n  var _field$getLabelProps;\n\n  var styles = useStyleConfig(\"FormLabel\", passedProps);\n  var props = omitThemingProps(passedProps);\n\n  props.className;\n      var children = props.children,\n      _props$requiredIndica = props.requiredIndicator,\n      requiredIndicator = _props$requiredIndica === void 0 ? /*#__PURE__*/React.createElement(RequiredIndicator, null) : _props$requiredIndica,\n      _props$optionalIndica = props.optionalIndicator,\n      optionalIndicator = _props$optionalIndica === void 0 ? null : _props$optionalIndica,\n      rest = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var field = useFormControlContext();\n  var ownProps = (_field$getLabelProps = field == null ? void 0 : field.getLabelProps(rest, ref)) != null ? _field$getLabelProps : _extends({\n    ref: ref\n  }, rest);\n  return /*#__PURE__*/React.createElement(chakra.label, _extends({}, ownProps, {\n    className: cx(\"chakra-form__label\", props.className),\n    __css: _extends({\n      display: \"block\",\n      textAlign: \"start\"\n    }, styles)\n  }), children, field != null && field.isRequired ? requiredIndicator : optionalIndicator);\n});\n\nif (__DEV__) {\n  FormLabel.displayName = \"FormLabel\";\n}\n\n/**\n * Used to show a \"required\" text or an asterisks (*) to indicate that\n * a field is required.\n */\nvar RequiredIndicator = /*#__PURE__*/forwardRef(function (props, ref) {\n  var field = useFormControlContext();\n  var styles = useStyles();\n  if (!(field != null && field.isRequired)) return null;\n  var className = cx(\"chakra-form__required-indicator\", props.className);\n  return /*#__PURE__*/React.createElement(chakra.span, _extends({}, field == null ? void 0 : field.getRequiredIndicatorProps(props, ref), {\n    __css: styles.requiredIndicator,\n    className: className\n  }));\n});\n\nif (__DEV__) {\n  RequiredIndicator.displayName = \"RequiredIndicator\";\n}\n\nexport { FormControl, FormErrorIcon, FormErrorMessage, FormHelperText, FormLabel, RequiredIndicator, useFormControl, useFormControlContext, useFormControlProps };\n"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_excluded","Textarea","forwardRef","props","ref","styles","useStyleConfig","_omitThemingProps","omitThemingProps","className","rows","rest","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","textareaProps","useFormControl","textareaStyles","omit","React","chakra","cx","__css","__DEV__","displayName","placeholderColor","useColorModeValue","foregroundColor","UseThemeColors","useState","fieldState","setFieldState","useThoughtRecord","label","onSubmit","isSubmitting","thoughtRecord","currentQuestion","isValidQuestion","useEffect","isKeyOfThoughtRecord","value","spacing","rounded","w","h","flexDirection","mt","alignContent","justifyContent","mx","px","py","offsetY","offsetX","transition","enter","duration","exit","delay","style","display","height","width","in","placeholder","onChange","event","_placeholder","color","fontSize","p","bg","size","variant","disabled","alignSelf","isLoading","loadingText","onClick","LoadingTextField","_excluded$2","_excluded2$1","_createContext","createContext","strict","name","FormControlProvider","useFormControlContext","FormControl","useMultiStyleConfig","_useFormControlProvid","idProp","id","isRequired","isInvalid","isDisabled","isReadOnly","htmlProps","uuid","useId","labelId","feedbackId","helpTextId","_React$useState","hasFeedbackText","setHasFeedbackText","_React$useState2","hasHelpText","setHasHelpText","_useBoolean","useBoolean","isFocused","setFocus","getHelpTextProps","forwardedRef","mergeRefs","node","getLabelProps","_props$id","_props$htmlFor","dataAttr","htmlFor","getErrorMessageProps","getRootProps","role","getRequiredIndicatorProps","children","onFocus","on","onBlur","off","useFormControlProvider","context","StylesProvider","FormHelperText","field","useStyles","helperText","_excluded$1","_excluded2","_useFormControlProps","_ref","_ref2","_ref3","readOnly","required","labelIds","push","join","undefined","callAllHandlers","useFormControlProps","ariaAttr","FormErrorMessage","ownProps","alignItems","text","FormErrorIcon","_className","Icon","icon","fill","d","FormLabel","passedProps","_field$getLabelProps","_props$requiredIndica","requiredIndicator","RequiredIndicator","_props$optionalIndica","optionalIndicator","textAlign"],"sourceRoot":""}