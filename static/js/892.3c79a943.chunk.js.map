{"version":3,"file":"static/js/892.3c79a943.chunk.js","mappings":"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","sources":["Components/Authorization/LoginForm.tsx","Components/Authorization/UserPassFormElements.tsx"],"sourcesContent":["import {\n\tBox,\n\tStack,\n\tLink,\n\tButton,\n\tHeading,\n\tuseToast,\n\tText,\n\tCenter,\n} from '@chakra-ui/react'\nimport useAuth from '../../Hooks/useAuth'\n\nimport { useForm, SubmitHandler } from 'react-hook-form'\nimport { loginEndpoint } from '../../Utils/api'\nimport UserPassFormElements from './UserPassFormElements'\nimport UseThemeColors from '../../Hooks/useThemeColors'\nimport { useEffect } from 'react'\nimport { useNavigate, Link as BrowserLink, useLocation } from 'react-router-dom'\nimport LoadingTextField from '../Loading/LoadingTextField'\nimport { Token } from '../../types'\n\ninterface FormValues {\n\tusername: string\n\tpassword: string\n}\ntype LocationState = {\n\tstate: {\n\t\tpath: string\n\t}\n}\n\nconst Login: React.FC = () => {\n\tconst toast = useToast()\n\tconst { login, currentUser } = useAuth()\n\tconst { foregroundColor, backgroundColor, linkColor } = UseThemeColors()\n\tconst {\n\t\tregister,\n\t\thandleSubmit,\n\t\tformState: { errors, isSubmitting },\n\t} = useForm<FormValues>()\n\tconst navigate = useNavigate()\n\tconst { state } = useLocation() as LocationState\n\n\tuseEffect(() => {\n\t\tif (currentUser) {\n\t\t\tnavigate(state?.path || '/profile')\n\t\t}\n\t}, [currentUser, navigate, state?.path])\n\n\tconst onSubmit: SubmitHandler<FormValues> = async (value) => {\n\t\ttry {\n\t\t\tconst response = await fetch(loginEndpoint, {\n\t\t\t\tbody: new URLSearchParams({ ...value }),\n\t\t\t\tmethod: 'POST',\n\t\t\t\tmode: 'cors',\n\t\t\t})\n\t\t\tif (response.status === 200) {\n\t\t\t\tconst token: Token = await response.json()\n\n\t\t\t\ttoast({\n\t\t\t\t\tstatus: 'success',\n\t\t\t\t\tdescription: 'Logged in.  Redirecting...',\n\t\t\t\t})\n\t\t\t\tawait login(token)\n\t\t\t} else {\n\t\t\t\tthrow new Error('Incorrect Username or Password')\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tif (error instanceof Error) {\n\t\t\t\ttoast({\n\t\t\t\t\tstatus: 'error',\n\t\t\t\t\tdescription: error.message,\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\tif (currentUser === null) {\n\t\treturn <LoadingTextField />\n\t}\n\treturn (\n\t\t<Center minH={'70vh'}>\n\t\t\t<Stack spacing={8} mx={'auto'} maxW={'lg'} maxH={'100%'} px={6}>\n\t\t\t\t<Stack spacing={4} align={'center'}>\n\t\t\t\t\t<Heading textAlign={'center'} fontSize={'4xl'}>\n\t\t\t\t\t\tSign in to your account\n\t\t\t\t\t</Heading>\n\t\t\t\t\t<Link as={BrowserLink} to={'/about'}>\n\t\t\t\t\t\t<Text color=\"whiteAlpha.800\" as=\"u\">\n\t\t\t\t\t\t\tWhat is a thought record?\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t</Link>\n\t\t\t\t</Stack>\n\t\t\t\t<form onSubmit={handleSubmit(onSubmit)}>\n\t\t\t\t\t<Box rounded={'lg'} bg={foregroundColor} boxShadow={'lg'} p={8}>\n\t\t\t\t\t\t<UserPassFormElements register={register} errors={errors} />\n\t\t\t\t\t\t<Stack p={2} spacing={6}>\n\t\t\t\t\t\t\t<Stack\n\t\t\t\t\t\t\t\tdirection={{ base: 'column', sm: 'row' }}\n\t\t\t\t\t\t\t\talign={'start'}\n\t\t\t\t\t\t\t\tspacing={4}\n\t\t\t\t\t\t\t\tjustify={'space-between'}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Link as={BrowserLink} color={linkColor} to={'/forgotpassword'}>\n\t\t\t\t\t\t\t\t\tForgot password?\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t</Stack>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\ttype={'submit'}\n\t\t\t\t\t\t\t\tisLoading={isSubmitting}\n\t\t\t\t\t\t\t\tloadingText={'Submitting'}\n\t\t\t\t\t\t\t\tvariant={'loginSubmit'}\n\t\t\t\t\t\t\t\ttextColor={'white'}\n\t\t\t\t\t\t\t\tbg={backgroundColor}\n\t\t\t\t\t\t\t\tsx={{ _hover: { _disabled: { bg: backgroundColor } } }}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tSign in\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\tas={BrowserLink}\n\t\t\t\t\t\t\t\tto=\"/signup\"\n\t\t\t\t\t\t\t\ttextAlign={'center'}\n\t\t\t\t\t\t\t\tcolor={linkColor}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tNew user? Sign up here!\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</Stack>\n\t\t\t\t\t</Box>\n\t\t\t\t</form>\n\t\t\t</Stack>\n\t\t</Center>\n\t)\n}\nexport default Login\n","import {\n\tFormControl,\n\tFormLabel,\n\tInput,\n\tFormErrorMessage,\n} from '@chakra-ui/react'\nimport { FieldError, UseFormRegister } from 'react-hook-form'\nimport React from 'react'\n\ninterface FormValues {\n\tusername: string\n\tpassword: string\n}\ninterface IProps {\n\terrors: Errors\n\tregister: UseFormRegister<FormValues>\n}\ninterface Errors {\n\tusername?: FieldError | undefined\n\tpassword?: FieldError | undefined\n}\n\nconst UserPassFormElements: React.FC<IProps> = ({\n\terrors,\n\tregister,\n}: IProps) => {\n\treturn (\n\t\t<>\n\t\t\t<FormControl isRequired isInvalid={!!errors?.username} id=\"email\">\n\t\t\t\t<FormLabel>Email address</FormLabel>\n\t\t\t\t<Input\n\t\t\t\t\t_hover={{ borderColor: 'gray.300' }}\n\t\t\t\t\tborderColor={'gray.300'}\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tplaceholder=\"Email\"\n\t\t\t\t\t{...register('username', {\n\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\tpattern: {\n\t\t\t\t\t\t\tvalue: /^\\S+@\\S+$/i,\n\t\t\t\t\t\t\tmessage: 'Not a valid email address',\n\t\t\t\t\t\t},\n\t\t\t\t\t})}\n\t\t\t\t/>\n\t\t\t\t<FormErrorMessage>{errors?.username?.message}</FormErrorMessage>\n\t\t\t</FormControl>\n\t\t\t<FormControl isInvalid={!!errors?.password?.message} id=\"password\">\n\t\t\t\t<FormLabel my={2}>Password</FormLabel>\n\t\t\t\t<Input\n\t\t\t\t\tborderColor={'gray.300'}\n\t\t\t\t\tcolor={'black'}\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tplaceholder=\"password\"\n\t\t\t\t\t{...register('password', {\n\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\tmaxLength: {\n\t\t\t\t\t\t\tvalue: 24,\n\t\t\t\t\t\t\tmessage: 'Your password is too long',\n\t\t\t\t\t\t},\n\t\t\t\t\t\tminLength: {\n\t\t\t\t\t\t\tvalue: 4,\n\t\t\t\t\t\t\tmessage: 'Your password is too short',\n\t\t\t\t\t\t},\n\t\t\t\t\t})}\n\t\t\t\t/>\n\t\t\t\t<FormErrorMessage>{errors?.password?.message}</FormErrorMessage>\n\t\t\t</FormControl>\n\t\t</>\n\t)\n}\n\nexport default UserPassFormElements\n"],"names":["toast","useToast","useAuth","login","currentUser","UseThemeColors","foregroundColor","backgroundColor","linkColor","useForm","register","handleSubmit","formState","errors","isSubmitting","navigate","useNavigate","state","useLocation","useEffect","path","onSubmit","value","fetch","loginEndpoint","body","URLSearchParams","method","mode","response","status","json","token","description","Error","message","minH","spacing","mx","maxW","maxH","px","align","textAlign","fontSize","as","BrowserLink","to","color","rounded","bg","boxShadow","p","direction","base","sm","justify","type","isLoading","loadingText","variant","textColor","sx","_hover","_disabled","isRequired","isInvalid","username","id","borderColor","placeholder","required","pattern","password","my","maxLength","minLength"],"sourceRoot":""}